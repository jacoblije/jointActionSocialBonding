  Group% File name: trainingExperimentFinalAnalysis.R
% Author: Jacob Taylor
% Date: 20/09/2017
% Description: A script for analysing complete data from trainingExperiment in Weihai and Beijing during August 2016.
% This analysis incorporates performance data coded from video recordings of each experimental session.

\documentclass[english]{article}
\usepackage[margin=1.8cm,a4paper]{geometry}
\usepackage[english]{babel} % hyphenation
\usepackage{amsmath,amssymb,amsthm} % for mathematical
\usepackage{graphicx} % to include graphics




% Main data manipulation tasks: 1) data reduction (group and team measures)
%                               2) group differences
%                               3) manipulation checks

% Main objectives: 1) test study predictions:

%                     1.a relationship between perceived joint action success and team click
%                             1.a.i relationship between session performance variables and perceptions of joint action success / team click?
%                     1.b relationship between expectation violation and team click
%                             1.b.i relationship between session performance variables and expectation violation / team click?
%                     1.c interaction between perceptions of jointActionSuccess and teamClick
%
%                     2.a relationship between team click and social bonding
%                             (2.a.i relationship between performance and social bonding?)
%
%                     3.a relationship between jointActionSuccess and socialBonding?
%                         3.a.i relationship between performance and socialBonding
%                     3.b relationship between expectation violation and socialBonding
%
%                     4.a mediation analysis: teamClick mediates relationship between jointActionSuccess and socialBonding
%                         4.a.i jointActionSuccess mediates relationship between performance and teamClick?
%                     4.b mediation analysis: teamClick mediates relationship between Expectations and socialBonding
%
%                     2.1.a - 2.4.b ---> re run this looking at pre-post changes in group measures and team measures...
%                     Additional analyses:
%                               1. teamClick mediates relationship between jointAction and generalised socialBonding to team / family?
%                               2.

% setting global settings and loading useful libraries


\begin{document}

<<standardSettings, echo=FALSE, results='hide'>>=
library(knitr)
opts_chunk$set(echo=FALSE,fig.width=3.5, fig.height=3.5,fig.align='center')
library(xtable) # to make Latex tables
install.packages("tableone")
library(tableone)
@

<<dataInput, eval=TRUE, echo=FALSE, results='hide'>>=
setwd("/Users/jacob1/Documents/2017/Research/DPhil/Dissertation/finalDocuments/jointActionSocialBonding/images")
# read in complete data from experiment:
tlc <- read.csv("trainingLongComplete.csv", na.strings = c("", "NA", "n/a"))
twc <- read.csv("trainingWideComplete.csv", na.strings = c("", "NA", "n/a"))
@




\title{Field Experiment}
\date{}
\author{Jacob Taylor & Emma Cohen \\ Institute of Cognitive \and Evolutionary Anthropology, University of Oxford}



\section{Abstract}
This study further tested the relationship, hypothesised in this dissertation, between joint action, team click, and social bonding in a controlled experimental environment.  An experiment was designed to test the prediction, partly confirmed in an in situ survey study, that athletes who experienced higher quality joint action would also experience higher levels of team click and social bonding.  58 Professional Chinese rugby players (Men = \Sexpr{length(which(twc$sex == 0)}) participated in a between-subjects design
in which athletes' expectations for joint action training drill \citep[``Invasion drill''][]{Passos2011}) were manipulated in one of two conditions.  Athletes in the ``low difficulty'' condition were primed with information to suggest that the training drill would require minimal rugby-sepcific individual and joint-action competence (i.e., 2/10 difficulty rating).  By contrast, in the ``high difficulty'' condition, athletes were primed to expect the training drill to be relatively difficult (8/10 difficulty rating). Pre- and post-experiment surveys were conducted, measuring athletes' perceptions of main variables of interest (individual and group performance, team click, and social bonding (both to the training group and the team more generally)), as well as athlete personality type and states of athlete states of arousal, fatigue, and injury.  Video footage of each experimental session was also recorded to derive an objective measure of interpersonal coordination not reliant on self-report.

It was predicted that athletes in the high-uncertainty condition would experience higher levels of team click and social bonding for two reasons: 1) athletes with expectations of higher difficulty would pay greater attention to coordinating action with others, and 2) athletes expecting higher difficulty in the experiment would experience higher positive violation of expectations around group performance.  Athletes in the ``low difficulty'' condition would on average experience less strongly the phenomenon of ``team click'' and flow-on feelings of social bonding, because they were not primed to attend less closely to joint-action with co-actors, and they would not experience the same level of positive violations of expectations around group performance.   Video footage was analysed for evidence of dynamic coupling between co-actors as well as defenders \citep{Schmidt2011,Richardson2012,Passos2012}, and these data were compared to psychological measures in order to explore psychological correlates of effective  interpersonal movement coordination in joint action.


\section{Introduction}
When athletes coordinate their behaviours they do so by making predictions about the state of the world.  In the case of joint action, in which there are many moving parts, predictions rely on the behaviours of
of others for their accuracy. Annecdote and observation in team sport and other joint activities involving complex realtime coordination of behaviours around technically demanding tasks, suggests that the phenomenology associated with co-actors' predictions clicking into place is an extremely powerful social bonding agent.

The previous chapter presented empirical evidence of a relationship between perceptions of joint action success and social bonding, fully mediated by the phenomenon of ``team click.'' A relationship between violation of expectations surrounding team performance and feelings of team click was also observed, but a model of the relationship between team performance expectation vioaltion and social bonding did not reliably fit the data.  The results of this naturalistic \textit{in situ} study are noteworthy as they provide evidence for the prediction that perceptions of joint action influence psychological processes of affiliation and connection with teammates, possibly via the mediating phenomenon of ``team click.''  Controlled experimental research is needed in order to more directly access causal mechanisms that underpin the relationship between joint action and social bonding.  If perceived joint action success and positive violation of expectation around team performance are the two candidate predictors of team click and social bonding, how is it possible to experimentally manipulate conditions conducive to maximising these two factors in joint action? In addition, how is it possible to isolate joint action from other potential sources of information regarding the team and its performance such as explicit feedback from coaches and other players surrounding performance and joint action outcome? This experimental study was designed with these considerations in mind.

The Lit Review:
%begin by describing a phenomenon in a general way along with several studies that demonstrate it, then describing two or more competing theories of the phenomenon, and finally presenting a hypothesis to test one or more of the theories.
1. Re-cap literature (Synchrony, joint action, pink noise, team click)
2. Extend
3.Priming literature: prime difficulty and uncertainty:
- Challenge to skill ratio - Flow literature.
By manipulating the level of uncertainty of information regarding the expectation


%Immediately after the opening comes the literature review, which describes relevant previous research on the topic and can be anywhere from several paragraphs to several pages in length. However, the literature review is not simply a list of past studies. Instead, it constitutes a kind of argument for why the research question is worth addressing.

%By the end of the literature review, readers should be convinced that the research question makes sense and that the present study is a logical next step in the ongoing research process.   it is extremely important to start with an outline of the main points that you want to make, organized in the order that you want to make them. Or if you are proposing a new theory, then of course you should discuss findings that are consistent with that theory. However, if there are other findings that are inconsistent with it, again, you should discuss them too.



The Closing:
These considerations lead to the hypothesis that higher levels of uncertainty, and expectations of higher levels of technical challenge in joint action will lead to higher levels of social bonding, due to the likelihood that athletes will experience more positive violations of expectations around team performance in the high-uncertainty prime than in a low difficulty prime.
%The closing of the introduction—typically the final paragraph or two—usually includes two important elements. The first is a clear statement of the main research question or hypothesis. This statement tends to be more formal and precise than in the opening and is often expressed in terms of operational definitions of the key variables. The second is a brief overview of the method and some comment on its appropriateness.


%These considerations lead to the hypothesis that the more bystanders to an emergency, the less likely, or the more slowly, any one bystander will intervene to provide aid. To test this proposition it would be necessary to create a situation in which a realistic “emergency” could plausibly occur. Each subject should also be blocked from communicating with others to prevent his getting information about their behavior during the emergency. Finally, the experimental situation should allow for the assessment of the speed and frequency of the subjects’ reaction to the emergency. The experiment reported below attempted to fulfill these conditions (p. 378).


\section{Method}

\subsection{Participants}
\Sexpr{length(unique(twc$englishName))} professional Chinese rugby players from two provincial programs participated in the study (men = \Sexpr{length(which(twc$sex == 0))} M(age) = \Sexpr{mean(twc$age, na.rm = TRUE)} (SD = \Sexpr{sd(twc$age, na.rm = T))}, range = 16-29). Athletes were recruited from two provincial rugby programs,  \Sexpr{length(which(twc$team == "sdw" | twc$team == "sdm"))} participants were athletes from Shandong province (men = \Sexpr{length(which(twc$team == "sdm"))}, M(age) = \Sexpr{mean(twc$age[twc$team == "sdm" | twc$team == "sdw"], na.rm = T)}) and the remaining \Sexpr{length(which(twc$team == "bjm" | twc$team == "bjw"))} athletes were from Beijing province (men = \Sexpr{length(which(twc$team == "bjm"))}, M(age) = \Sexpr{mean(twc$age[twc$team == "bjm" | twc$team == "bjw"], na.rm = T)})).

This study was approved by the University of Oxford’s Central University Research Ethics Committee (SAME/CUREC1A/15-059).


\subsection{Materials}

\subsubsection{Cover Story}

Athletes were notified (first via WeChat and then in a team meeting) that my research purpose was to trial a number of different rugby training drills selected from a recent report by World Rugby concerning training methods for rugby sevens.  Athletes were told that the training drills had been previously rated by a selection of international level coaches and players from all over the world (including Asia and China).  Athletes were informed that I planned to assess the ratings provided by World Rugby by replicating these drills with more rugby athletes in China.  Athletes were told that survey measures and video footage would be collected, which would be later analysed to assess individual performance of athletes in each training drill.  It was also explained to athletes that there would be a second round of drills also requiring groups of eight athletes, but the makeup of these groups may reshuffle depending on athletes preferences.  This detail allowed for the includion of a post-experiment bonding measure, in which athletes were asked to what extent they wished to continue to work with the same 8-athlete team in a subsequent round of drills.

\subsubsection{Experimental Paradigm: Invasion Drill}
This study required athletes to participate in a common rugby training drill, which was preceeded by one of two experimental primes—--a ``high difficulty'' condition, or a ``low difficulty'' condition.   Replicating \textcite{Passos2011}, a common training drill known as ``invasion drill'' \citep{Biscombe1998} was selected as it was representative of a typical subphase of rugby union.  In this drill a group of four rugby players formed an attacking group and two pairs of opponents formed a first and second defensive line.  There were two performance aims of this drill: (a) attackers were asked carry the ball into the try area, and (b) defenders were asked to stop the attacker’s progression toward the try line.  One trial consisted of one attempt by the attacking sub-group to penetrate two defending sub-groups, and carry the ball over the try line. The drill was conducted on a regulation multipurpose 110m x 70m grass or artificial turf training field within a 22m x 15m rectangle area marked by plastic cones (see ~\ref{fig:invasionDrill}). The ball used was size 5, as recommended by World Rugby for this age group of athletes.

%The training drill, known as ``invasion drill,'' requires eight athletes, one sub-grouof four attackers and two sub-groups of two defenders.  The primary aim of the drill is for the sub-group of 4 attacking players to successfully penetrate two consecutive lines of two defenders (also commonly known as a ``4 on 2 + 2'' drill). The aim of the two defending sub-groups is to stop the attacking team from achieving the primary goal, by interfering with their coordination by halting the ball-carrier, or the ball in flight between attacking players.

\begin{figure}[htbp]
  \includegraphics[width = \linewidth]{images/invasionDrill.png}
  \caption{The Invasion Drill from Passos (2011)}
  \label{fig:invasionDrill}
\end{figure}


\subsubsection{Experimental Conditions: high and low difficulty}

Two different pre-experiment introductions were developed for the same training drill in order to manipulate athletes’ expectations around the technical difficulty of the impending joint-action task.  Athletes in the ``high difficulty'' condition learned that the overall average difficulty rating for the training drill provided by World Rugby coaches and athletes was 77.5/100, or approximately 8 out of 10.  Athletes were told that the drill would require an extension of their abilities as individuals and as a training group (see appendix for full script).  Athletes in the ``low difficulty'' condition, by contrast, learned that they would be participating in an ostensibly different drill with an overall average difficulty rating (provided by World Rugby coaches and athletes) of 22.5/100, or approximately 2 out of 10.  In reality, the training drill was exactly the same for each experimental session, and the relative difficulty of this drill was estimated in a pilot study to be approximately 5/10, see APPENDIX).  By either over- or under-rating the difficulty of the impending training drill, it was hoped that athletes' expectations around certainty of performance would be altered, such that athletes in the high difficulty condition would experience on average higher positive violation of expectations around team performance, whereas athletes in the low difficulty condition would experience less positive violations of expectations around team performance.


\subsubsection{Surveys}
Athletes completed survey questionnaires via WeChat using their personal mobile devices and internet connection. Surveys were administered at three time points: 1) one day before the experiment (Baseline), 2) immediately before the experiment after receiving the experimental prime (Pre-Experiment), and 3) once immediately following the completion of the experiment (Post-Experiment)(see TABLE).  At time 1 (baseline) athletes were asked about their impressions of recent individual performance and the performance of their procinvial team, including their feelings of team click and social bonding with their provincial team as a whole.  At time 2 (post-manipulation, pre-experiment), athletes were asked questions about their expectations concerning their individual performance and the performance of their specific training group in the impending training drill.  At time 3 (post-experiment), athletes completed questions concerning their impression of their own performance and the performance of their specific training group in the training drill. In addition, athletes were also asked about their feelings of team click and social bonding to the team as a whole (the same set of items that were asked one day earlier at time 1 (Baseline)).

\subsubsection{Survey Items}

The survey at time 1 (baseline) including items regarding recent individual and team performance, subjective and objective measures of technical competence in rugby, perceptions of team click, and social bonding to the team as a whole.  In addition, the time 1 survey also included items concerning basic personal information, current injury status, and personality type.

%survey items included questions regarding individual and team performance, including how athletes felt about their 1) overall individual performance, 2) specific components of individual performance (passing technique, support play in attack, 1on1 defense, effectiveness in contact, and decision making in game-play), 3) overall team performance and 4) specific components of team perfomance (coordination of the defensive line and attacking line, support play, and onfield communication) throughout the past month of training and competition.  All these items were recorded on a 100 point scale, 0 - ``Extremely poor'', 100 - ``Extremely good.''  Athletes were also asked about their individual technical competence relative to teammates and other Chinese and international athletes, as well perceived competence of their team relative to other Chinese provincial teams.
%Athletes were also asked if their perception of recent performance influences their 1) mood and 2) confidence regarding future performance (All these items were measured with a zero-centred 100 point scale, -50 - ``Extremely weak'', 0 - ``Average'', 50 - ``Extremely strong'').

%Athletes were also asked about their feelings concerning team click over the past month.  These items included: feelings about the unspoken understanding between athletes, the general atmosphere of the team (100 point scale, 0 - ``Extremely poor'', 100 - ``Extremely strong''), the extent to which they agree that their on-field abilities have been extended by other athletes (100 point scale, 0 - ``Completely disagree'', 100 - ``Completely agree''), and the reliability of other athletes to perform on-field roles and their own reliability in performing on-field roles for other athletes (100 point scale, 0 - ``Extremely unreliable'', 100 - ``Extremely reliable''), and a pictorial ``team click" measure (a visual item with five responses, ranging from less to more coordinated arrangements of dots (representing 12 athletes in a sevens tournament squad).
%In addition, athletes were asked about their feelings regarding their team's commitment to aspects of discipline over the past month (punctuality, observing bed times and curfews, attendance at meals, general team conduct) (100 point scale, 0 - ``Extremely poor'', 100 - ``Extremely strong'')).

%Athletes were asked about their feelings of social bonding to their team over the past month, including perceived emotional support and shared goal (100 point scale, 0 - ``Exrtremely weak'', 100 - ``Extremely strong''), identity fusion (pictorial scale and 7 item verbal scale, see APPENDIX), and group identification (six-item scale, see APPENDIX). In addition, athletes were also asked about identity fusion to country and family, measured using the pictorial fusion scale, and were then asked to rank their level of fusion to team, country, and family in order of most fused to least fused.  Athletes were also asked about their personality type using a common ten-item personality measure \citep[Ten Item Personality Index - TIPI][see APPENDIX]{Gosling2003}.

The survey administered at time 2, following the experimental manipulation and immediately prior to the experimnent, was designed to measure athletes' expectations regarding individual and group performance in light of the experimental prime. It also included items designed to measure athletes' perceptions of team click and social bonding to the training group (but not the team as a whole beyond the immediate training group).
In addition to these items, the time 2 survey also asked about current injury status, and state of arousal and fatigue (see APPENDIX for full details).

The final survey, administered at time 3 immediately post-experiment, consisted of items designed to assess athlete perceptions of individual and group performance in the experiment relative to prior expectations, as well as feelings of team click and social bonding to the training group. In addition to items already described above, athletes were asked if they would prefer to stay with their existing group or change to a new group for subsequent training experiments.  In addition to these group-specific items, the time 3 survey also included items regarding social bonding to the team as a whole (beyond an athlete's specific training group), in order to assess any change in these measures due to their experience of joint action in the experiment.  Finally, the time 3 survey also asked about current injury status and state of arousal and fatigue (see APPENDIX for full details).

\subsubsection{Video Analysis}
In order to produce quantitative measures of interpersonal coordination between co-actors, athletes’ motion was captured by a single digital video camera (Sony FDR-AX700 4K HDR Camcorder) mounted on a 1.2m high tripod. Digital video images of action were acquired by a computer, using a USB2.0 cable, and files were saved on an encrypted external hard disk in .AVI format. For image treatment, TACTO 8.0 software was used for digitizing at 25 frames per second.

\subsection{Design}
A between-subjects experimental design was used, in which expectations of technical difficulty was manipulated in one of two conditions, ``high difficulty'' and ``low difficulty'' condition.  Surveys measuring athletes' perceptions of joint action success, team click, and feelings of social bonding to the specific training group and the entire provincial team were recorded both before and after the experiment.

%The design of a study is its overall structure. What were the independent and dependent variables? Was the independent variable manipulated, and if so, was it manipulated between or within subjects? How were the variables operationally defined?

\subsection{Proceedure}
Permission to run the study was sought from the head coach of each of the four teams (Beijing men's, Beijing women's, Shandong men's, Shandong women'subparagraph).  These coaches nominated athletes who were fit and able to complete the session without compromising their existing training schedules.  Athletes were randomly assigned to one of two conditions, and athletes in each condition were matched as much as possible according to average training age.

Once athletes were assigned to an experimental group, they were then added to a WeChat group populated by other training group members and the researcher. Atheltes were provided with the initial cover story for the experiment via ths WeChat group.  Athletes were told that the aim of the researcher was to trial a number of different rugby training drills selected from a recent report by World Rugby concerning training methods for rugby sevens.  These training drills had been previously rated by a selection of international level coaches and players from all over the world (including Asia and China), and the researcher planned to assess these ratings by testing by analysing how athletes react physiologically and psychologically to the demands of each drill.  Athletes were informed that data would be collected in the form of pre- and post-experiment surveys and video footage of the training drill (for full script, see APPENDIX).

Approximately 24 hours before the each experiment, athletes were instructed to complete the baseline survey by openning a link provided in the WeChat group.  This survey included written consent for the study. Approximately 1 hour before the experiment was due to take place, athletes were administered with an experimental prime via Wechat.  In the ``high difficulty'' condition, athletes were primed to believe that they were about to participate in a very difficult training drill (on the upper end of their individual and gorup technical abilities), whereas athletes in the ``low difficulty'' condition were primed to believe that they were about to participate in an easy training drill well within their tehcnical abilities (see APPENDIX for full script). All athletes were lead to believe that athletes in the other experiemntal groups were performing different drills to their assigned drill. (In reality, the training drill for each condition was identical, the only thing that varied was the pre-experiment prime).

Once athletes were assembled at the designated training field, the difficulty prime that had been sent via WeChat an hour earlier was verbally re-administered to the athletes. In addition, athletes were told in more detail about the requirements of the Invasion Drill (see APPENDIX for full details).  Athletes were told that assessment of performance in the experiment would be based on video analysis of an individual's performance in attack and defense, including an athlete's ability to coordinate attack and defense with others. Besides this outcome, athletes were provided with no other explicit information regarding performance goals, besides completing the experimental drill to the best of their ability within the rules of rugby union.

Athletes were then administered with the time 2 survey (pre-experiment, post-manipulation), which took approximately 3-5 minutes to complete.  After every athlete had finished the survey, athletes participated in a ~10 minute standard warm up routine, including slow jogging and dynamic stretching.  Athletes were instructed not to use the rugby ball during this period.  Once atheltes had completed the warm up, the researcher assembled the group within the training drill area, with one athlete standing on each of the 8 available plastic markers.  In this position, athletes were told once more about the structure and procedure for the training drill, in particular the way in which athletes were expected to rotate clockwise after every trial of the drill so that athletes did not habituate to certain positions or alliances in the drill (see fig Passos 2nd picture).

To begin the drill, the ball-carier at the front and centre of the attack sub-group was instructed to tap the ball with his / her foot, before initiating the attacking sub-phase by advancing forward towards the defence sub-units.  In the case that the ball was immediately fumbled during the inition of the trial, the training group was instructed to restart that trial and the trial in which the mistake was made was not counted.  Following a block of 4 practice trials, athletes were told by the researcher that the formal test was beginning. The group of athletes then completed 16 trials of the drill, which allowed each athlete to complete four trials of attack and four trials of defence, in different positions.  Following completion of all 16 test trials, athletes were assembled by the researcher and thanked for their participation, before being sent the sideline to complete the final post-experiment survey on their mobile devices.  Following the completion of this final survey, athletes were told that they would be informed within two days about the next experiment trial (in fact no more experiments were taking place).

In the case that athletes were unable to participate in their assigned condition for reasons of injury (2), a dummy athlete naive to the details of the study was used to fill in as part of the 8 person drill.  In the two experimental conditions involving the Beijing women's team, two athletes each session were unable to complete the experiment due to injury and sickness, and as such the drill was modified to a 3 on 2 + 1 Invasion drill requiring only 6 athletes, instead of the 4 on 2 + 2 drill, which requied 8.


\myparagraph{Video Analysis Procedure}
The digital camera and tripod were positioned on a platform 2m above the level of the playing field, approximately 10-15m from the bottom try-line corner of the Invasion Drill perimeter (see figure ~\ref{fig:invasionDrill}).  The experimenter began video recording before the athletes arrived, and ceased recording after all athletes had left the training field following the experiment.  Digital video images of action were acquired by a computer, using a USB2.0 cable, and files were saved on an encrypted external hard disk in .AVI format. For image treatment, TACTO 8.0 software was used for digitizing at 25 frames per second.

%The procedure is how the study was carried out. It often works well to describe the procedure in terms of what the participants did rather than what the researchers did. For example, the participants gave their informed consent, read a set of instructions, completed a block of four practice trials, completed a block of 20 test trials, completed two questionnaires, and were debriefed and excused.




\section{Results}

A total of \Sexpr{length(unique(twc$englishName))} athletes participated in \Sexpr{length(unique(twc$sessionNumber))} experimental sessions. In one session (Shandong men's high difficulty condition) a dummy participant stood in for an athlete could not participate due to injury.  In the two sessions with Beijing women's team, due to failure of athletes to take part due to injury (3) or illness (2) the training drill was modfied to a ``3 on 2 + 1'' drill, requiring only 6 athletes to complete. In one of these experimental sessions, a female dummy participant was also required to fill in to make up a total of 6 athletes for the modified drill.  In both cases, dummy participants were competent ex-athletes naive to the predictions of the study and they did not participate in the survey responses before or after the session.  The survey and video data of the remaining 58 athletes were analysed.

\subsection{Survey Data}

<<descriptivesPreFactor, echo = FALSE, eval = TRUE>>=
##subset data for renaming
twcAthleteInfo <- subset(twc, select = c(age, sex, condition, team, startingReserve,
                                    trainingAge, yearsTeam, athleteStatus, teamStatus))

## rename values for factors:
twcAthleteInfo$sex <- ifelse(!is.na(twcAthleteInfo$sex) & twcAthleteInfo$sex == 0, "male",
                                    ifelse(!is.na(twcAthleteInfo$sex) & twcAthleteInfo$sex == 1, "female", NA))


twcAthleteInfo$athleteStatus <- ifelse(!is.na(twcAthleteInfo$athleteStatus) &
                                    twcAthleteInfo$athleteStatus == 3, "Master",
                                      ifelse(!is.na(twcAthleteInfo$athleteStatus) & twcAthleteInfo$athleteStatus == 2, "1st Level",
                                        ifelse(!is.na(twcAthleteInfo$athleteStatus) & twcAthleteInfo$athleteStatus == 1, "2nd Level", NA)))

twcAthleteInfo$teamStatus <- ifelse(!is.na(twcAthleteInfo$teamStatus) &
                                    twcAthleteInfo$teamStatus == 5, "Full time employee",
                                      ifelse(!is.na(twcAthleteInfo$teamStatus) & twcAthleteInfo$teamStatus == 4, "Full time contract",
                                        ifelse(!is.na(twcAthleteInfo$teamStatus) & twcAthleteInfo$teamStatus == 3, "Training contract",
                                        ifelse(!is.na(twcAthleteInfo$teamStatus) & twcAthleteInfo$teamStatus == 2, "Student contract",
                                        ifelse(!is.na(twcAthleteInfo$teamStatus) & twcAthleteInfo$teamStatus == 1, "Trial",
                                         NA)))))

twcAthleteInfo$team <- ifelse(!is.na(twcAthleteInfo$team) & twcAthleteInfo$team ==
                                        "bjm","Beijing Men", ifelse(!is.na(twcAthleteInfo$team) & twcAthleteInfo$team == "bjw", "Beijing Women", ifelse(!is.na(twcAthleteInfo$team) & twcAthleteInfo$team == "sdm", "Shandong Men", ifelse(!is.na(twcAthleteInfo$team) & twcAthleteInfo$team == "sdw", "Shandong Women", NA))))

##rename columns for tables:
library(dplyr)
twcAthleteInfo <- rename(twcAthleteInfo, Position = startingReserve,
                              TrainingAge = trainingAge, YearsInTeam = yearsTeam, AthleteLevel = athleteStatus, ContractStatus = teamStatus, Team = team, Condition = condition, Sex = sex, Age = age)


## create a variable list which we want in table one
listVars <- c("Age", "Sex", "Team", "Position",  "TrainingAge" , "YearsInTeam", "AthleteLevel", "ContractStatus")

## define categorical variables
catVars <- c("Sex", "Condition", "AthleteLevel", "Position", "ContractStatus", "Team")


## Create overall table:
table1 <- CreateTableOne(vars = listVars,
                         data = twcAthleteInfo,
                         factorVars = catVars
                         )

## create table which is printable
table1_overall <- print(table1,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(table1_overall, type="latex", caption = "Overview of experiment sample",
                    label = "tab:athleteDescriptivesTraining"),
                    file="athleteDescriptivesTraining.tex")

## create table one, strata = Condition
table1 <- CreateTableOne(vars = listVars,
                         strata = "Condition",
                         data = twcAthleteInfo,
                         factorVars = catVars
                         )

## create table which is printable
table1_overall <- print(table1,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(table1_overall, type="latex", caption = "Overview of experiment sample by condition",
      label = "tab:athleteDescriptivesConditionTraining"),
      file="athleteDescriptivesConditionTraining.tex")
@


The attributes of the overall sample of athletes are displayed in Table ~\ref{tab:athleteDescriptivesTraining}. The average training age of athletes was \Sexpr{mean(twc$trainingAge,na.rm=T)} years (\Sexpr{sd(twc$trainingAge),na.rm=T}), with athletes having spent on average over \Sexpr{round(mean(twc$years,na.rm=T),digits=0)} years in the team. \Sexpr{round(length(which(twc$teamStatus == 5))/length(unique(twc$englishName))*100, digits = 0)}\% of the sample were full-time employees of their provincial team, with the rest either being employed on a full-time (but fixed term) contract
(\Sexpr{round(length(which(twc$teamStatus == 4)/length(unique(twc$englishName))*100, digits = 0)}\%)), a ``student contract'' ((\Sexpr{round(length(which(twc$teamStatus == 3)/length(unique(twc$englishName))*100, digits = 0)}\%))), a short term training contract
((\Sexpr{round(length(which(twc$teamStatus == 2)/length(unique(twc$englishName))*100, digits = 0)}\%))), or on a short-term trial basis ((\Sexpr{round(length(which(twc$teamStatus == 1)/length(unique(twc$englishName))*100, digits = 0)}\%))).  Only \Sexpr{length(which(twc$startingReserve == "Starting Team"))} of \Sexpr{length(unique(twc$englishName))} (\Sexpr{round(length(which(twc$startingReserve == "Starting Team"))/length(unique(twc$englishName))*100, digits = 0)}\%) of athletes declared that there were in the starting team of their respective provincial teams.  Attributes of athletes in the high and low difficulty conditions were evenly matched (see Table ~\ref{tab:athleteDescriptivesConditionTraining}), with only a marginally significant difference in average age between conditions (high difficulty condition = \Sexpr{mean(high$age,na.rm=T)}(\Sexpr{sd(high$age,na.rm=T)}), low difficulty condition = \Sexpr{mean(low$age,na.rm=T)}(\Sexpr{sd(low$age,na.rm=T)}).

\input{.../images/athleteDescriptivesTraining.tex}
\input{.../images/athleteDescriptivesConditionTraining.tex}


<<descriptivesIndividualPerformanceSubjective, echo = FALSE, eval = TRUE>>=
## IND PERFORMANCE SUBJECTIVE:
tlcCompPerfSubj <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                indAbilityTeammates_1, indAbilityChina_1, indAbilityInternational_1, indPerformanceOnConfidence_1, indPerformanceOnMood_1))

## Need to remove values of confidence and mood from t 2 & 3:

tlcCompPerfSubj$indPerformanceOnConfidence <- tlcCompPerfSubj$indPerformanceOnConfidence_1
tlcCompPerfSubj$indPerformanceOnConfidence[tlcCompPerfSubj$time == 2] <- NA
tlcCompPerfSubj$indPerformanceOnConfidence[tlcCompPerfSubj$time == 3] <- NA

tlcCompPerfSubj$indPerformanceOnMood <- tlcCompPerfSubj$indPerformanceOnMood_1
tlcCompPerfSubj$indPerformanceOnMood[tlcCompPerfSubj$time == 2] <- NA
tlcCompPerfSubj$indPerformanceOnMood[tlcCompPerfSubj$time == 3] <- NA




tlcCompPerfSubj$sex <- ifelse(!is.na(tlcCompPerfSubj$sex) &
                                tlcCompPerfSubj$sex == 0, "male", ifelse(!is.na(tlcCompPerfSubj$sex) & tlcCompPerfSubj$sex == 1, "female", NA))

tlcCompPerfSubj$time <- ifelse(!is.na(tlcCompPerfSubj$time) &
                                  tlcCompPerfSubj$time == 3, "Post",
                                ifelse(!is.na(tlcCompPerfSubj$time) &     tlcCompPerfSubj$time == 2, "Pre",
                                ifelse(!is.na(tlcCompPerfSubj$time) & tlcCompPerfSubj$time == 1, "Baseline", NA)))
tlcCompPerfSubj$time <- factor(tlcCompPerfSubj$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcCompPerfSubj$time))

##rename columns for tables:
#library(dplyr)
tlcCompPerfSubj <- rename(tlcCompPerfSubj, Name = englishName, Sex = sex, Team = team,
                                Condition = condition, Time = time, CompetenceVsTeammates = indAbilityTeammates_1, CompetenceVsChinesePros = indAbilityChina_1, CompetenceVsInternationalPros = indAbilityInternational_1, PerfomanceImpactOnConfidence =  indPerformanceOnConfidence, PerformanceImpactOnMood = indPerformanceOnMood)


## create a variable list which we want in table one
listVars <- c("CompetenceVsTeammates", "CompetenceVsChinesePros",
                "CompetenceVsInternationalPros", "PerfomanceImpactOnConfidence", "PerformanceImpactOnMood")

## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableTlcCompPerfSubj <- CreateTableOne(vars = listVars,
                         strata = "Condition",
                         data = tlcCompPerfSubj,
                         factorVars = catVars
                         )

## create table which is printable
tableTlcCompPerfSubj.condition <- print(tableTlcCompPerfSubj,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTlcCompPerfSubj.condition, type="latex",
                          label = "tab:indPerfTimeHighTraining",
                          caption = "Athlete subjective perceptions of \n individual technical competence by condition"), file="compPerfSubjTraining.tex")

@

The central tendencies of subjective measures of individual technical competence compared to teammates, other Chinese professional rugby players, and International professionals, were all above the mid-point of the zero-centred scale (min = -50, max = 50, see Table ~\ref{tab:compPerfSubjTraining}).  The central tendencies for items concerning the impact of individual performance on mood and confidence were also well above the mid-point of the scale (100 point scale, min = 0, max = 100). Likewise, average athlete perceptions of individual (Tables ~\ref{tab:indPerfTimeLowTraining} and ~\ref{tab:indPerfTimeHighTraining}), group (Tables ~\ref{tab:groupPerfTimeLowTraining} and ~\ref{tab:groupPerfTimeHighTraining}), and team (measured at Baseline only, see Table ~\ref{tab:teamPerfTimeBaselineTraining}) performance were above the mid-point of the scale for both conditions at all time points.
Variables measuring athletes' perceptions of group and team click, and feelings of bonding to the training group and the team as a whole also showed high negative skew above the mid-point of each respective scale (see Tables ~\ref{tab:groupClickTimeHighTraining}\nobreakdash--\ref{tab:teamBondingTimeHighTraining}).


%Among these measures, perceived technical competence relative to international rugby players differed significantly by cont

%\input{.../images/compPerfSubjTraining.tex}
%%IndPerforamnce:
%\input{.../images/indPerfTimeLowTraining.tex}
%\input{.../images/indPerfTimeHighTraining.tex}
%% groupPerformance:
%\input{.../images/groupPerfTimeLowTraining.tex}
%\input{.../images/groupPerfTimeHighTraining.tex}
%% teamPerformance:
%\input{.../images/teamPerfTimeBaselineTraining.tex}
%% groupClick:
%\input{.../images/groupClickTimeHighTraining.tex}
%\input{.../images/groupClickTimeLowTraining.tex}
%% groupBonding:
%\input{.../images/groupBondingTimeHighTraining.tex}
%\input{.../images/groupBondingTimeLowTraining.tex}
%% teamBonding:
%\input{.../images/teamBondingTimeLowTraining.tex}
%\input{.../images/teamBondingTimeHighTraining.tex}
%%teamDiscipline
%\input{.../images/teamDisciplineTimeLowTraining.tex}
%%ArousalExertion:
%\input{...images/arousalExertionTimeLowTraining.tex}
%%Personality:
%\input{.../images/personalityTraining.tex}



\subsubsection{Athlete perceptions of performance}

\myparagraph{Individual performance}
<<descriptivesIndividualPerformance, echo = FALSE, eval = TRUE>>=

##subset data for renaming
tlcIndPerformance <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                indPerformance, indConfidenceChallenges, indDefense, passingTechnique, supportPlay, decisionMaking, effectivenessInContact))
## Change indPerformance @ time = 3 to another variable, and delete values at time = 3
tlcIndPerformance$indPerformanceExp <- tlcIndPerformance$indPerformance
tlcIndPerformance$indPerformanceExp[tlcIndPerformance$time == 1] <- NA
tlcIndPerformance$indPerformanceExp[tlcIndPerformance$time == 2] <- NA
tlcIndPerformance$indPerformance[tlcIndPerformance$time == 3] <- NA
#rescale indPerformaneExp to (0,100)
library(scales)
tlcIndPerformance$indPerformanceExp[tlcIndPerformance$time == 3] <- rescale(tlcIndPerformance$indPerformanceExp[tlcIndPerformance$time == 3], to = c(0, 100), from = c(-50, 50))

## rename values for factors:
tlcIndPerformance$sex <- ifelse(!is.na(tlcIndPerformance$sex) &
                                tlcIndPerformance$sex == 0, "male", ifelse(!is.na(tlcIndPerformance$sex) & tlcIndPerformance$sex == 1, "female", NA))

tlcIndPerformance$time <- ifelse(!is.na(tlcIndPerformance$time) &
                                  tlcIndPerformance$time == 3, "Post",
                                ifelse(!is.na(tlcIndPerformance$time) &     tlcIndPerformance$time == 2, "Pre",
                                ifelse(!is.na(tlcIndPerformance$time) & tlcIndPerformance$time == 1, "Baseline", NA)))
tlcIndPerformance$time <- factor(tlcIndPerformance$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcIndPerformance$time))

##rename columns for tables:
library(dplyr)
tlcIndPerformance <- rename(tlcIndPerformance, Name = englishName, Sex = sex, Team = team,
                                Condition = condition, Time = time, OverallPerformance = indPerformance, ConfidenceInAbility = indConfidenceChallenges, PerformanceVsExpectations = indPerformanceExp, Defence = indDefense, Passing = passingTechnique, SupportPlay = supportPlay, DecisionMaking = decisionMaking, Contact = effectivenessInContact)

# create high and low condition dfs:
tlcIndPerformanceHigh <- subset(tlcIndPerformance, Condition == "high")

tlcIndPerformanceLow <- subset(tlcIndPerformance, Condition == "low")

## create a variable list which we want in table one
listVars <- c("OverallPerformance", "ConfidenceInAbility", "PerformanceVsExpectations", "Defence", "Passing", "SupportPlay", "DecisionMaking", "Contact")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableIndPerfHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcIndPerformanceHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableIndPerformHighTime <- print(tableIndPerfHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableIndPerformHighTime, type="latex",
                      label = "tab:indPerfTimeHighTraining",
                      caption = "Athlete perceptions of \n individual performance (high difficulty condition)"), file="indPerfTimeHighTraining.tex")


## create table one (low difficulty condition)
tableIndPerfLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcIndPerformanceLow,
                         factorVars = catVars
                         )

## create table which is printable
tableIndPerformLowTime <- print(tableIndPerfLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableIndPerformLowTime, type="latex",
                          label = "tab:indPerfTimeHighTraining",
                          caption = "Athlete perceptions of \n individual performance (low difficulty condition)"), file="indPerfTimeLowTraining.tex")
@

\input{.../images/indPerfTimeLowTraining.tex}
\input{.../images/indPerfTimeHighTraining.tex}


<<descriptivesGroupPerformance, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcGroupPerformance <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                groupPerformance, groupConfidentTechnicalChallenges, groupAttackingLine, groupDefensiveLine,  groupOnfieldCommunication, groupSupportPlay))
## groupPerformance is only @ time = 3, and is in terms of expectations...rescale.
tlcGroupPerformance$groupPerformanceExp <- tlcGroupPerformance$groupPerformance
#tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 1] <- NA
#tlcGroupPerformance$groupPerformanceExp[tlcIndPerformance$time == 2] <- NA
#tlcGroupPerformance$groupPerformance[tlcGroupPerformance$time == 3] <- NA
#rescale groupPerformaneExp to (0,100)
library(scales)
tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 3] <- rescale(tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 3], to = c(0, 100), from = c(-50, 50))


## rename values for factors:
tlcGroupPerformance$sex <- ifelse(!is.na(tlcGroupPerformance$sex) &
                                tlcGroupPerformance$sex == 0, "male", ifelse(!is.na(tlcGroupPerformance$sex) & tlcGroupPerformance$sex == 1, "female", NA))

tlcGroupPerformance$time <- ifelse(!is.na(tlcGroupPerformance$time) &
                                  tlcGroupPerformance$time == 3, "Post",
                                ifelse(!is.na(tlcGroupPerformance$time) &     tlcGroupPerformance$time == 2, "Pre",
                                ifelse(!is.na(tlcGroupPerformance$time) & tlcGroupPerformance$time == 1, "Baseline", NA)))
tlcGroupPerformance$time <- factor(tlcGroupPerformance$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcGroupPerformance$time))

##rename columns for tables:
library(dplyr)
tlcGroupPerformance <- rename(tlcGroupPerformance, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time, PerformanceVsExpectations = groupPerformanceExp, ConfidenceInGroupAbility = groupConfidentTechnicalChallenges, GroupAttack = groupAttackingLine, GroupDefence = groupDefensiveLine, GroupCommunication = groupOnfieldCommunication, GroupSupportPlay = groupSupportPlay)

# create high and low condition dfs:
tlcGroupPerformanceHigh <- subset(tlcGroupPerformance, Condition == "high")

tlcGroupPerformanceLow <- subset(tlcGroupPerformance, Condition == "low")

## create a variable list which we want in table one
listVars <- c("ConfidenceInGroupAbility", "GroupPerformanceVsExpectations", "GroupAttack", "GroupDefence", "GroupCommunication", "GroupSupportPlay")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableGroupPerfHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupPerformanceHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupPerformHighTime <- print(tableGroupPerfHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupPerformHighTime, type="latex", caption = "Athlete perceptions of \n group performance (high difficulty condition)"), file="groupPerfTimeHighTraining.tex")


## create table one (low difficulty condition)
tableGroupPerfLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupPerformanceLow,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupPerformLowTime <- print(tableGroupPerfLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupPerformLowTime, type="latex", caption = "Athlete perceptions of \n group performance (low difficulty condition)"), file="groupPerfTimeLowTraining.tex")

@

\input{.../images/groupPerfTimeLowTraining.tex}
\input{.../images/groupPerfTimeHighTraining.tex}





<<descriptivesTeamPerformance, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcTeamPerformance <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                teamPerformance_1, teamAbilityChina_1, teamDefensiveLine_1, teamAttackLine_1,  teamOnfieldCommunication_1, teamSupportPlay_1))

## TeamPerformance variables are only @ time = 3, and is in terms of expectations...rescale.
tlcTeamPerformance$teamPerformance <- tlcTeamPerformance$teamPerformance_1
tlcTeamPerformance$teamPerformance[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamPerformance[tlcTeamPerformance$time == 3] <- NA

tlcTeamPerformance$teamAbilityChina <- tlcTeamPerformance$teamAbilityChina_1
tlcTeamPerformance$teamAbilityChina[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamAbilityChina[tlcTeamPerformance$time == 3] <- NA

tlcTeamPerformance$teamDefensiveLine <- tlcTeamPerformance$teamDefensiveLine_1
tlcTeamPerformance$teamDefensiveLine[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamDefensiveLine[tlcTeamPerformance$time == 3] <- NA

tlcTeamPerformance$teamAttackLine <- tlcTeamPerformance$teamAttackLine_1
tlcTeamPerformance$teamAttackLine[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamAttackLine[tlcTeamPerformance$time == 3] <- NA

tlcTeamPerformance$teamOnfieldCommunication <- tlcTeamPerformance$teamOnfieldCommunication_1
tlcTeamPerformance$teamOnfieldCommunication[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamOnfieldCommunication[tlcTeamPerformance$time == 3] <- NA

tlcTeamPerformance$teamSupportPlay <- tlcTeamPerformance$teamSupportPlay_1
tlcTeamPerformance$teamSupportPlay[tlcTeamPerformance$time == 2] <- NA
tlcTeamPerformance$teamSupportPlay[tlcTeamPerformance$time == 3] <- NA


## rename values for factors:
tlcTeamPerformance$sex <- ifelse(!is.na(tlcTeamPerformance$sex) &
                                tlcTeamPerformance$sex == 0, "male", ifelse(!is.na(tlcTeamPerformance$sex) & tlcTeamPerformance$sex == 1, "female", NA))

tlcTeamPerformance$time <- ifelse(!is.na(tlcTeamPerformance$time) &
                                  tlcTeamPerformance$time == 3, "Post",
                                ifelse(!is.na(tlcTeamPerformance$time) &     tlcTeamPerformance$time == 2, "Pre",
                                ifelse(!is.na(tlcTeamPerformance$time) & tlcTeamPerformance$time == 1, "Baseline", NA)))
tlcTeamPerformance$time <- factor(tlcTeamPerformance$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcTeamPerformance$time))

##rename columns for tables:
library(dplyr)
tlcTeamPerformance <- rename(tlcTeamPerformance, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time, TeamPerformance = teamPerformance, TeamCompetenceInChina = teamAbilityChina, TeamAttack = teamAttackLine, TeamDefence = teamDefensiveLine, TeamCommunication = teamOnfieldCommunication, TeamSupportPlay = teamSupportPlay)



## create a variable list which we want in table one
listVars <- c("TeamPerformance", "TeamCompetenceInChina", "TeamAttack", "TeamDefence", "TeamCommunication", "TeamSupportPlay")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableTeamPerf_condition <- CreateTableOne(vars = listVars,
                         strata = "Condition",
                         data = tlcTeamPerformance,
                         factorVars = catVars
                         )

## create table which is printable
tableTeamPerformCondition <- print(tableTeamPerf_condition,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTeamPerformCondition, type="latex",
                          label = "tab:teamPerfBaselineTraining",
                          caption = "Athlete perceptions of team performance \n at Baseline, by condition"), file="teamPerfTimeBaselineTraining.tex")
@

\input{.../images/teamPerfTimeBaselineTraining.tex}




GROUP CLICK:
<<descriptivesGroupClick, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcGroupClick <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                groupClickPictorial, groupUnspokenUnderstanding, groupGeneralAtmosphere, groupAbilitiesExtended, groupReliabilityForOthers,
                                groupReliabilityOfOthers))
## groupClick is only @ time = 3, and is in terms of expectations...rescale.
#tlcGroupClick$groupClick <- tlcGroupClick$groupClick
#tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 1] <- NA
#tlcGroupPerformance$groupPerformanceExp[tlcIndPerformance$time == 2] <- NA
#tlcGroupPerformance$groupPerformance[tlcGroupPerformance$time == 3] <- NA
#rescale groupPerformaneExp to (0,100)
#library(scales)
#tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 3] <- rescale(tlcGroupPerformance$groupPerformanceExp[tlcGroupPerformance$time == 3], to = c(0, 100), from = c(-50, 50))


## rename values for factors:
tlcGroupClick$sex <- ifelse(!is.na(tlcGroupClick$sex) &
                                tlcGroupClick$sex == 0, "male", ifelse(!is.na(tlcGroupClick$sex) & tlcGroupClick$sex == 1, "female", NA))

tlcGroupClick$time <- ifelse(!is.na(tlcGroupClick$time) &
                                  tlcGroupClick$time == 3, "Post",
                                ifelse(!is.na(tlcGroupClick$time) &     tlcGroupClick$time == 2, "Pre",
                                ifelse(!is.na(tlcGroupClick$time) & tlcGroupClick$time == 1, "Baseline", NA)))
tlcGroupClick$time <- factor(tlcGroupClick$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcGroupClick$time))

##rename columns for tables:
library(dplyr)
tlcGroupClick <- rename(tlcGroupClick, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time,
                                ClickPictorial = groupClickPictorial, UnspokenUnderstanding = groupUnspokenUnderstanding, GeneralAtmosphere = groupGeneralAtmosphere,
                                AbilitiesExtended = groupAbilitiesExtended, ReliabilityForOthers = groupReliabilityForOthers,
                                ReliabilityOfOthers = groupReliabilityOfOthers)


# create high and low condition dfs:
tlcGroupClickHigh <- subset(tlcGroupClick, Condition == "high")

tlcGroupClickLow <- subset(tlcGroupClick, Condition == "low")

## create a variable list which we want in table one
listVars <- c("ClickPictorial", "UnspokenUnderstanding", "GeneralAtmosphere", "AbilitiesExtended", "ReliabilityForOthers", "ReliabilityOfOthers")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableGroupClickHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupClickHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupClickHighTime <- print(tableGroupClickHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupClickHighTime, type= "latex", caption = "Athlete perceptions of \n group click (high difficulty condition)"), file="groupClickTimeHighTraining.tex")


## create table one (low difficulty condition)
tableGroupClickLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupClickLow,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupClickLowTime <- print(tableGroupClickLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupClickLowTime, type="latex", caption = "Athlete perceptions of \n group click (low difficulty condition)"), file="groupClickTimeLowTraining.tex")
@

\input{.../images/groupClickTimeHighTraining.tex}
\input{.../images/groupClickTimeLowTraining.tex}


GROUP BONDING:
<<descriptivesGroupBonding, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcGroupBonding <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                groupEmotionalSupport, groupSharedGoal, groupFusionPictorial, groupStayChange))


## Need to reverse group Stay Change and locate it correctly at Post-Tournament:
## First locate @ t = 3:
tlcGroupBonding$groupStayChange[tlc$time == 3] <- tlcGroupBonding$groupStayChange[tlc$time == 1]
tlcGroupBonding$groupStayChange[tlc$time == 1] <- NA
## Now reverse the scores, so that higher values are more pro-group:
tlcGroupBonding$groupStayChangeRev <- 100 - tlcGroupBonding$groupStayChange

## rename values for factors:
tlcGroupBonding$sex <- ifelse(!is.na(tlcGroupBonding$sex) &
                                tlcGroupBonding$sex == 0, "male", ifelse(!is.na(tlcGroupBonding$sex) & tlcGroupBonding$sex == 1, "female", NA))

tlcGroupBonding$time <- ifelse(!is.na(tlcGroupBonding$time) &
                                  tlcGroupBonding$time == 3, "Post",
                                ifelse(!is.na(tlcGroupBonding$time) &     tlcGroupBonding$time == 2, "Pre",
                                ifelse(!is.na(tlcGroupBonding$time) & tlcGroupBonding$time == 1, "Baseline", NA)))
tlcGroupBonding$time <- factor(tlcGroupBonding$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcGroupBonding$time))

##rename columns for tables:
library(dplyr)
tlcGroupBonding <- rename(tlcGroupBonding, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time,
                                EmotionalSupport = groupEmotionalSupport, SharedGoal = groupSharedGoal, FusionPictorial = groupFusionPictorial,
                                StayOrChange = groupStayChangeRev)

# create high and low condition dfs:
tlcGroupBondingHigh <- subset(tlcGroupBonding, Condition == "high")

tlcGroupBondingLow <- subset(tlcGroupBonding, Condition == "low")

## create a variable list which we want in table one
listVars <- c("EmotionalSupport", "SharedGoal", "FusionPictorial", "StayOrChange")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableGroupBondingHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupBondingHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupBondingHighTime <- print(tableGroupBondingHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupBondingHighTime, type= "latex", caption = "Athlete perceptions of \n group bonding (high difficulty condition)"), file="groupBondingTimeHighTraining.tex")


## create table one (low difficulty condition)
tableGroupBondingLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcGroupBondingLow,
                         factorVars = catVars
                         )

## create table which is printable
tableGroupBondingLowTime <- print(tableGroupBondingLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableGroupBondingLowTime, type="latex", caption = "Athlete perceptions of \n group bonding (low difficulty condition)"), file="groupBondingTimeLowTraining.tex")
@

\input{.../images/groupBondingTimeHighTraining.tex}
\input{.../images/groupBondingTimeLowTraining.tex}



TEAM  BONDING:
<<descriptivesTeamBonding, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcTeamBonding <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                emotionalSupport, sharedGoal, fusionVerbal, groupId, fusionPictorialTeam, fusionPictorialFamily, fusionPictorialCountry, rankTeam, rankFamily, rankCountry))


## Need to reverse rank scores:
tlcTeamBonding$rankTeamRev <- 3 - tlcTeamBonding$rankTeam
tlcTeamBonding$rankFamilyRev <- 3 - tlcTeamBonding$rankFamily
tlcTeamBonding$rankCountryRev <- 3 - tlcTeamBonding$rankCountry


## rename values for factors:
tlcTeamBonding$sex <- ifelse(!is.na(tlcTeamBonding$sex) &
                                tlcTeamBonding$sex == 0, "male", ifelse(!is.na(tlcTeamBonding$sex) & tlcTeamBonding$sex == 1, "female", NA))

tlcTeamBonding$time <- ifelse(!is.na(tlcTeamBonding$time) &
                                  tlcTeamBonding$time == 3, "Post",
                                ifelse(!is.na(tlcTeamBonding$time) &     tlcTeamBonding$time == 2, "Pre",
                                ifelse(!is.na(tlcTeamBonding$time) & tlcTeamBonding$time == 1, "Baseline", NA)))
tlcTeamBonding$time <- factor(tlcTeamBonding$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcTeamBonding$time))



##rename columns for tables:
library(dplyr)
tlcTeamBonding <- rename(tlcTeamBonding, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time,
                                EmotionalSupport = emotionalSupport, SharedGoal = sharedGoal, FusionVerbalTeam = fusionVerbal, GroupIdentification = groupId,
                                FusionPictorialTeam = fusionPictorialTeam,
                                FusionPictorialFamily = fusionPictorialFamily, FusionPictorialCountry = fusionPictorialCountry, TeamRank = rankTeamRev, FamilyRank = rankFamilyRev, CountryRank = rankCountryRev)

# create high and low condition dfs:
tlcTeamBondingHigh <- subset(tlcTeamBonding, Condition == "high")

tlcTeamBondingLow <- subset(tlcTeamBonding, Condition == "low")

## create a variable list which we want in table one
listVars <- c("EmotionalSupport", "SharedGoal", "FusionVerbalTeam",
                "GroupIdentification", "FusionPictorialTeam", "FusionPictorialFamily", "FusionPictorialCountry", "TeamRank", "FamilyRank", "CountryRank")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableTeamBondingHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcTeamBondingHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableTeamBondingHighTime <- print(tableTeamBondingHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTeamBondingHighTime, type= "latex", caption = "Athlete perceptions of \n team bonding (high difficulty condition)"), file="teamBondingTimeHighTraining.tex")


## create table one (low difficulty condition)
tableTeamBondingLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcTeamBondingLow,
                         factorVars = catVars
                         )

## create table which is printable
tableTeamBondingLowTime <- print(tableTeamBondingLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTeamBondingLowTime, type="latex", caption = "Athlete perceptions of \n team bonding (low difficulty condition)"), file="teamBondingTimeLowTraining.tex")
@

\input{.../images/teamBondingTimeLowTraining.tex}
\input{.../images/teamBondingTimeHighTraining.tex}


<<descriptivesTeamDiscipline, echo = FALSE, eval = TRUE>>=
##subset data for renaming
tlcTeamDiscipline <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                teamPunctuality, teamAttendanceMeals, teamGeneralConduct, teamCurfew))

## rename values for factors:
tlcTeamDiscipline$sex <- ifelse(!is.na(tlcTeamDiscipline$sex) &
                                tlcTeamDiscipline$sex == 0, "male", ifelse(!is.na(tlcTeamDiscipline$sex) & tlcTeamDiscipline$sex == 1, "female", NA))

tlcTeamDiscipline$time <- ifelse(!is.na(tlcTeamDiscipline$time) &
                                  tlcTeamDiscipline$time == 3, "Post",
                                ifelse(!is.na(tlcTeamDiscipline$time) &     tlcTeamDiscipline$time == 2, "Pre",
                                ifelse(!is.na(tlcTeamDiscipline$time) & tlcTeamDiscipline$time == 1, "Baseline", NA)))
tlcTeamDiscipline$time <- factor(tlcTeamDiscipline$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcTeamDiscipline$time))


teamPunctuality, teamAttendanceMeals, teamGeneralConduct, teamCurfew
##rename columns for tables:
library(dplyr)
tlcTeamDiscipline <- rename(tlcTeamDiscipline, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time,
                                Punctuality = teamPunctuality, MealAttendance = teamAttendanceMeals,  GeneralConduct = teamGeneralConduct, Curfew = teamCurfew)

# create high and low condition dfs:
tlcTeamDisciplineHigh <- subset(tlcTeamDiscipline, Condition == "high")

tlcTeamDisciplineLow <- subset(tlcTeamDiscipline, Condition == "low")

## create a variable list which we want in table one
listVars <- c("Punctuality", "MealAttendance", "GeneralConduct",
                "Curfew")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableTeamDisciplineHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcTeamDisciplineHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableTeamDisciplineHighTime <- print(tableTeamDisciplineHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTeamDisciplineHighTime, type= "latex", caption = "Athlete perceptions of \n team discipline (high difficulty condition)"), file="teamDisciplineTimeHighTraining.tex")


## create table one (low difficulty condition)
tableTeamDisciplineLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcTeamDisciplineLow,
                         factorVars = catVars
                         )

## create table which is printable
tableTeamDisciplineLowTime <- print(tableTeamDisciplineLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTeamDisciplineLowTime, type="latex", caption = "Athlete perceptions of \n team discipine (low difficulty condition)"), file="teamDisciplineTimeLowTraining.tex")
@

\input{.../images/teamDisciplineTimeLowTraining.tex}





<<descriptivesArousalExertion, echo = FALSE, eval = FALSE>>=
## Reomve t1 and t2 scores from prpe and mental:
tlc$prpe <- tlc$prpe_3
tlc$prpe[tlc$time == 1] <- NA
tlc$prpe[tlc$time == 2] <- NA
tlc$mental <- tlc$mental_3
tlc$mental[tlc$time == 1] <- NA
tlc$mental[tlc$time == 2] <- NA

tlcArousalExertion <- subset(tlc, select = c(englishName, age, sex, condition, team,
                                time, aroused, excited, relaxed, fatigue, prpe, mental, injury))



## rename values for factors:
tlcArousalExertion$sex <- ifelse(!is.na(tlcArousalExertion$sex) &
                                tlcArousalExertion$sex == 0, "male", ifelse(!is.na(tlcArousalExertion$sex) & tlcArousalExertion$sex == 1, "female", NA))

tlcArousalExertion$time <- ifelse(!is.na(tlcArousalExertion$time) &
                                  tlcArousalExertion$time == 3, "Post",
                                ifelse(!is.na(tlcArousalExertion$time) &     tlcArousalExertion$time == 2, "Pre",
                                ifelse(!is.na(tlcArousalExertion$time) & tlcArousalExertion$time == 1, "Baseline", NA)))
tlcArousalExertion$time <- factor(tlcArousalExertion$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcArousalExertion$time))


##rename columns for tables:
library(dplyr)
tlcArousalExertion <- rename(tlcArousalExertion, Name = englishName, Sex = sex,
                                Team = team, Condition = condition, Time = time,
                                Aroused = aroused, Excited = excited, Relaxed = relaxed, Fatigue = fatigue, PhysicalExertion= prpe, MentalExertion = mental, InjuryStatus = injury)

# create high and low condition dfs:
tlcArousalExertionHigh <- subset(tlcArousalExertion, Condition == "high")

tlcArousalExertionLow <- subset(tlcArousalExertion, Condition == "low")

## create a variable list which we want in table one
listVars <- c("Aroused", "Excited", "Relaxed", "Fatigue",
                "PhysicalExertion", "MentalExertion", "InjuryStatus")


## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableArousalExertionHigh_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcArousalExertionHigh,
                         factorVars = catVars
                         )

## create table which is printable
tableArousalExertionHighTime <- print(tableArousalExertionHigh_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableArousalExertionHighTime, type= "latex", caption = "Athlete arousal \n (high difficulty condition)"), file="arousalExertionTimeHighTraining.tex")


## create table one (low difficulty condition)
tableArousalExertionLow_time <- CreateTableOne(vars = listVars,
                         strata = "Time",
                         data = tlcArousalExertionLow,
                         factorVars = catVars
                         )

## create table which is printable
tableArousalExertionLowTime <- print(tableArousalExertionLow_time,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableArousalExertionLowTime, type="latex", caption = "Athlete arousal and exertion \n (low difficulty condition)"), file="arousalExertionTimeLowTraining.tex")
@

\input{...images/arousalExertionTimeLowTraining.tex}



<<descriptivesPersonality, echo = FALSE, eval = TRUE>>=
## IND PERFORMANCE SUBJECTIVE:
tlcPersonality <- subset(tlc, select = c(englishName, condition, sex, time, team,
                                tipiAgreeableness, tipiConscientiousness, tipiEmotionalStability, tipiExtraverted, tipiOpenness))

## Remove personality values from t 2 & 3:
tlcPersonality$tipiAgreeableness[tlc$time == 2] <- NA
tlcPersonality$tipiAgreeableness[tlc$time == 3] <- NA
tlcPersonality$tipiConscientiousness[tlc$time == 2] <- NA
tlcPersonality$tipiConscientiousness[tlc$time == 3] <- NA
tlcPersonality$tipiEmotionalStability[tlc$time == 2] <- NA
tlcPersonality$tipiEmotionalStability[tlc$time == 3] <- NA
tlcPersonality$tipiExtraverted[tlc$time == 2] <- NA
tlcPersonality$tipiExtraverted[tlc$time == 3] <- NA
tlcPersonality$tipiOpenness[tlc$time == 2] <- NA
tlcPersonality$tipiOpenness[tlc$time == 3] <- NA


tlcPersonality$sex <- ifelse(!is.na(tlcPersonality$sex) &
                                tlcPersonality$sex == 0, "male", ifelse(!is.na(tlcPersonality$sex) & tlcPersonality$sex == 1, "female", NA))

tlcPersonality$time <- ifelse(!is.na(tlcPersonality$time) &
                                  tlcPersonality$time == 3, "Post",
                                ifelse(!is.na(tlcPersonality$time) &     tlcPersonality$time == 2, "Pre",
                                ifelse(!is.na(tlcPersonality$time) & tlcPersonality$time == 1, "Baseline", NA)))
tlcPersonality$time <- factor(tlcPersonality$time, levels = c("Baseline", "Pre",
                                  "Post"), ordered = is.ordered(tlcPersonality$time))

##rename columns for tables:

#library(dplyr)
tlcPersonality <- rename(tlcPersonality, Name = englishName, Sex = sex, Team = team,
                                Condition = condition, Time = time,
                                 Agreeableness = tipiAgreeableness, Conscientiousness =  tipiConscientiousness, EmotionalStability = tipiEmotionalStability, Extraverted = tipiExtraverted, Openness = tipiOpenness)



## create a variable list which we want in table one
listVars <- c("Agreeableness", "Conscientiousness",
                "EmotionalStability", "Extraverted", "Openness")

## define categorical variables
catVars <- c("Sex", "Condition", "Time")

## create table one (high difficulty condition)
tableTlcPersonality <- CreateTableOne(vars = listVars,
                         strata = "Condition",
                         data = tlcPersonality,
                         factorVars = catVars
                         )

## create table which is printable
tableTlcPersonality.condition <- print(tableTlcPersonality,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )

## print to latex file in wd
## this latex file will later be inputted
print(xtable(tableTlcPersonality.condition, type="latex", caption = "Athlete personality type by condition"), file="personalityTraining.tex")
@

\input{.../images/personalityTraining.tex} % problem with the n = 87, should be ~ 29 per condition

                          TEAM CLICK
                          [23] "generalAtmosphere"
                           "groupAbilitiesExtended"
                             [1] "abilityExtended"
                                  "unspokenUnderstanding"
                                   [81] "teamClickPictorial_1"
                                     "teamClickFactor"














\subsection{Data Reduction}
Exploratory factor analysis was used to reduce multicolinearity between variables while retaining as much variance as possible in the observed data \citep{Yong2013} (EFA, appendix ~\ref{appendix:EFA}).  Data reduction was performed on the main variables of interest, including components of individual and training group performance, team click, social bonding, and technical competence (objective and subjective). In addition, team click and social bonding measures directed at the team as a whole (and not just the specific training group) were reduced to factors, in order to assess pre- to post-experiment variation in generalised bonding to the team.
Procedure for data reduction followed the method outlined in the previous empirical chapter ~\ref{subsection:dataReduction}.

\subsubsection{Variables relevant to the specific training group}

\myparagraph{Perceptions of Training Group Joint Action Success}

<<dataReductionGroupPerformance, eval=TRUE, echo=FALSE>>=
#groupPerformanceVariablesSubset:
tlcGroupPerformance <- subset(tlc, select = c(groupDefensiveLine, groupAttackingLine,
                                                  groupSupportPlay, groupOnfieldCommunication))
tlcGroupPerformance.pca <- princomp(na.omit(tlcGroupPerformance))
summary(tlcGroupPerformance.pca)
plot(tlcGroupPerformance.pca)

tlcGroupPerformance.fa <- factanal(~ groupDefensiveLine + groupAttackingLine +
                                            groupSupportPlay + groupOnfieldCommunication, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.groupPerformanceFA <- round(sum(tlcGroupPerformance.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.GroupPerformanceFA <-  round((colSums(tlcGroupPerformance.fa$loadings*tlcGroupPerformance.fa$loadings)/dim(tlcGroupPerformance.fa$loadings)[1]*100), digits = 1)


head(tlcGroupPerformance.fa$scores)
tlc <- cbind(tlc, tlcGroupPerformance.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "jointActionSuccess"
groupPerformanceMatrix <- cor(tlcGroupPerformance, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOgroupPerformanceMatrix <- KMO(groupPerformanceMatrix)
# KMOGroupPerformanceMatrix$MSA is the colum in which the overal KMO is stored
bartlettGroupPerformance <- cortest.bartlett(groupPerformanceMatrix, n = 116) # what is the sample size here?
# ls(BartlettGroupPerformance)
# BartlettGroupPerformance$chisq, BartlettGroupPerformance$df, BartlettGroupPerformance$p.value
# sample size? length(unique(tlc$englishName)*2)
groupPerformanceSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityGroupPerformance <- psych::alpha(groupPerformanceMatrix)
cronAlphaGroupPerformance <- reliabilityGroupPerformance$total[,2]
guttLambdaGroupPerformance <- reliabilityGroupPerformance$total[,3]


#-----------------------Correlation Table----------------------#
library(xtable)
corstarsl <- function(x){
  require(Hmisc)
  x <- as.matrix(x)
  R <- rcorr(x)$r
  p <- rcorr(x)$P

  ## define notions for significance levels; spacing is important.
  mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
  ## trunctuate the matrix that holds the correlations to two decimal
  R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
  ## build a new matrix that includes the correlations with their apropriate stars
  Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
  diag(Rnew) <- paste(diag(R), " ", sep="")
  rownames(Rnew) <- colnames(x)
  colnames(Rnew) <- paste(colnames(x), "", sep="")
  ## remove upper triangle
  Rnew <- as.matrix(Rnew)
  Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
  Rnew <- as.data.frame(Rnew)
  ## remove last column and return the matrix (which is now a data frame)
  Rnew <- cbind(Rnew[1:length(Rnew)-1])
  return(Rnew)
}
@

Items concerning components of group performance in the invasion drill (defence, attack, support play, and on field communication) were subjected to EFA.  Correlations between group component performance items was very high (all r's > \Sexpr{round(min(groupPerformanceMatrix), digits = 2)}), which suggested that one factor was appropriate (see Table ~\ref{tab:jointActionSuccessCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOgroupPerformanceMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettGroupPerformance$df}, N = \Sexpr{groupPerformanceSampleSize}) = \Sexpr{bartlettGroupPerformance$chisq}, p = \Sexpr{round(bartlettGroupPerformance$p.value, digits = 2)). One factor, labelled ``Joint Action Success'' was imposed on the data, which explained \Sexpr{prVar.group PerformanceFA}\% of the overall variance (SS Loading = \Sexpr{SSLoadings.groupPerformanceFA}). $Guttmans \lambda = \Sexpr{round(reliabilityGroupPerformance$total[,3], digits = 2)}$ and $Cronbachs \alpha = \Sexpr{round(reliabilityGroupPerformance$total[,2], digits = 2)}$ indicated that the data reduction was appropriate and reliable.

<<groupPerformanceCor, echo = FALSE, eval = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcGroupPerformance)
print(xtable(corstarsl(tlcGroupPerformance), type="latex",
                    caption = "Correlations between components of group performance",
                    label = "tab:jointActionSuccessCorrTable"),
                    file = "jointActionSuccessCorrTable.tex")
@




\myparagraph{Perceptions of Individual Component Performance}
<<dataReductionIndPerformance, eval=TRUE, echo=FALSE>>=
#indPerformanceVariablesSubset: exclude effectivenessInContact (not relevant)
tlcIndPerformance <- subset(tlc, select = c(indDefense, passingTechnique, supportPlay,
                                                  decisionMaking))
tlcIndPerformance.pca <- princomp(na.omit(tlcIndPerformance))
summary(tlcIndPerformance.pca)
plot(tlcIndPerformance.pca)

tlcIndPerformance.fa <- factanal(~ indDefense + passingTechnique + supportPlay +
                                        decisionMaking +, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.indPerformanceFA <- round(sum(tlcIndPerformance.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.indPerformanceFA <-  round((colSums(tlcIndPerformance.fa$loadings*tlcIndPerformance.fa$loadings)/dim(tlcIndPerformance.fa$loadings)[1]*100), digits = 1)


head(tlcIndPerformance.fa$scores)
tlc <- cbind(tlc, tlcIndPerformance.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "indComponentsPerformance"
indPerformanceMatrix <- cor(tlcIndPerformance, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOindPerformanceMatrix <- KMO(indPerformanceMatrix)
# KMOIndPerformanceMatrix$MSA is the colum in which the overal KMO is stored
bartlettIndPerformance <- cortest.bartlett(indPerformanceMatrix, n = 116) # what is the sample size here?
# ls(BartlettIndPerformance)
# BartlettIndPerformance$chisq, BartlettIndPerformance$df, BartlettIndPerformance$p.value
# sample size? length(unique(tlc$englishName)*2)
indPerformanceSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityIndPerformance <- psych::alpha(indPerformanceMatrix)
cronAlphaIndPerformance <- reliabilityIndPerformance$total[,2]
guttLambdaIndPerformance <- reliabilityIndPerformance$total[,3]
@


Items concerning components of individual components of performance in the invasion drill (1-on-1 defence, passing technique, support play in attack, decision making in attack, and effectiveness in contact) were subjected to EFA.  The variable ``effectiveness in contact'' was removed from analysis as the invasion drill was predominantly a non-contact training drill, and so this item was not relevant to athletes' performance.  Correlations between individual component performance items was very high (all r's > \Sexpr{round(min(indPerformanceMatrix), digits = 2)}), which suggested that one factor was appropriate (see Table ~\ref{tab:tab:indComponentPerfCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOindPerformanceMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettIndPerformance$df}, N = \Sexpr{indPerformanceSampleSize}) = \Sexpr{bartlettIndPerformance$chisq}, p = \Sexpr{round(bartlettIndPerformance$p.value, digits = 2)). One factor, labelled ``Individual Performance Components'' was imposed on the data, which explained \Sexpr{prVar.indPerformanceFA} \% of the overall variance (SS Loading = \Sexpr{SSLoadings.indPerformanceFA}). $Guttmans \lambda = \Sexpr{round(reliabilityIndPerformance$total[,3], digits = 2)}$ and $Cronbachs \alpha = \Sexpr{round(reliabilityIndPerformance$total[,2], digits = 2)}$ indicated that the data reduction was appropriate and reliable.

<<indComponentsPerformanceCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcIndPerformance)
print(xtable(corstarsl(tlcIndPerformance), type="latex",
                    caption = "Correlations between components of individual performance",
                    label = "tab:indComponentPerfCorrTable"),
                    file = "indComponengtPerfCorrTable.tex")
# label = tab:indComponentPerformanceCorrTable
@


%Appendix
%% This is a follow-up EFA with individual and group performance in one matrix.
%<<dataReductionPerformanceAll, eval=TRUE, echo=FALSE>>=
%min(competenceMatrix)

%# 2. jointActionSuccess and individualComponentPerformance:
%#PerformanceComponentsTogether:
%tlcPerformance <- subset(tlc, select = c(groupDefensiveLine, groupAttackingLine,        groupSupportPlay, groupOnfieldCommunication, indDefense, passingTechnique, supportPlay, decisionMaking, effectivenessInContact))

%tlcPerformance.fa <- factanal(~ groupDefensiveLine + groupAttackingLine + groupSupportPlay + groupOnfieldCommunication +
                              %indDefense + passingTechnique + supportPlay + %decisionMaking + effectivenessInContact, 2,
                                 %data = tlc, rotation = "promax", na.action = na.exclude, %scores = "regression")
%tlcPerformance.fa

%tlcPerformanceMatrix <- cor(tlcPerformance, use = "complete")
%KMO(tlcPerformanceMatrix)
%library(psych)
%cortest.bartlett(tlcPerformanceMatrix, n = 116) # what is the sample size here?
%psych::alpha(tlcPerformanceMatrix)
%@



\myparagraph{Feelings of team click within training group}
<<dataReductionGroupClick, eval=TRUE, echo=FALSE>>=
#GroupClickVariablesSubset: exclude effectivenessInContact (not relvant)
tlcGroupClick <- subset(tlc, select = c(groupReliabilityOfOthers,
                                          groupReliabilityForOthers, groupAbilitiesExtended, groupClickPictorial, groupUnspokenUnderstanding, groupGeneralAtmosphere))
tlcGroupClick.pca <- princomp(na.omit(tlcGroupClick))
summary(tlcGroupClick.pca)
plot(tlcGroupClick.pca)

tlcGroupClick.fa <- factanal(~ groupReliabilityOfOthers + groupAbilitiesExtended +
                                        groupClickPictorial + groupUnspokenUnderstanding + groupGeneralAtmosphere, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.groupClickFA <- round(sum(tlcGroupClick.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.groupClickFA <-  round((colSums(tlcGroupClick.fa$loadings*tlcGroupClick.fa$loadings)/dim(tlcGroupClick.fa$loadings)[1]*100), digits = 1)


head(tlcGroupClick.fa$scores)
tlc <- cbind(tlc, tlcGroupClick.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "groupClickFactor"
groupClickMatrix <- cor(tlcGroupClick, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOgroupClickMatrix <- KMO(groupClickMatrix)
# KMOGroupClickMatrix$MSA is the colum in which the overal KMO is stored
bartlettGroupClick <- cortest.bartlett(groupClickMatrix, n = 116) # what is the sample size here?
# ls(BartlettGroupClick)
# BartlettGroupClick$chisq, BartlettGroupClick$df, BartlettGroupClick$p.value
# sample size? length(unique(tlc$englishName)*2)
groupClickSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityGroupClick <- psych::alpha(groupClickMatrix)
cronAlphaGroupClick <- reliabilityGroupClick$total[,2]
guttLambdaGroupClick <- reliabilityGroupClick$total[,3]
@

Items relating to training group team click (unspoken understanding, general atmosphere, click pictorial, reliability of others, reliability for others, ability extended by the group) were subjected to EFA.  The variable ``reliability for others'' was removed from the matrix because it did not significantly correlate with other variables (all r's <= .16).  Correlations between the remaining were very high (all $r's > \Sexpr{round(min(groupClickMatrix), digits = 2)}>$), which suggested that one factor was appropriate (see Table ee Table ~\ref{tab:groupClickCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOgroupClickMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettGroupClick$df}, N = \Sexpr{groupClickSampleSize}) = \Sexpr{bartlettGroupClick$chisq}, p = \Sexpr{round(bartlettGroupClick$p.value, digits = 2)}).
  One factor, labelled ``Group Click'' was imposed on the data, which explained \Sexpr{prVar.groupClickFA}\% of the overall variance (SS Loading = \Sexpr{SSLoadings.groupClickFA}). Guttmans \lambda = \Sexpr{round(reliabilityGroupClick$total[,3], digits = 2)} and Cronbachs \alpha = \Sexpr{round(reliabilityGroupClick$total[,2], digits = 2)} indicated that the data reduction was appropriate and reliable.

<<groupClickCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcGroupClick)
print(xtable(corstarsl(tlcGroupClick), type= "latex",
                    caption = "Correlations between variables of group click",
                    label = "tab:groupClickCorrTable"),
                    file = "groupClickCorrTable.tex")
# label = tab:groupClickCorrTable
@





\myparagraph{Feelings of Social Bonding to the training group}
<<dataReductionGroupBonding, eval=TRUE, echo=FALSE>>=
#GroupBondingVariablesSubset: exclude effectivenessInContact (not relvant)
tlcGroupBonding <- subset(tlc, select = c(groupEmotionalSupport, groupSharedGoal,
                                                groupFusionPictorial))
tlcGroupBonding.pca <- princomp(na.omit(tlcGroupBonding))
summary(tlcGroupBonding.pca)
plot(tlcGroupBonding.pca)

tlcGroupBonding.fa <- factanal(~ groupEmotionalSupport + groupSharedGoal +
                                      groupFusionPictorial, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.groupBondingFA <- round(sum(tlcGroupBonding.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.groupBondingFA <-  round((colSums(tlcGroupBonding.fa$loadings*tlcGroupBonding.fa$loadings)/dim(tlcGroupBonding.fa$loadings)[1]*100), digits = 1)

head(tlcGroupBonding.fa$scores)
tlc <- cbind(tlc, tlcGroupBonding.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "groupBondingFactor"
groupBondingMatrix <- cor(tlcGroupBonding, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOgroupBondingMatrix <- KMO(groupBondingMatrix)
# KMOGroupBondingMatrix$MSA is the colum in which the overal KMO is stored
bartlettGroupBonding <- cortest.bartlett(groupBondingMatrix, n = 116) # what is the sample size here?
# ls(BartlettGroupBonding)
# BartlettGroupBonding$chisq, BartlettGroupBonding$df, BartlettGroupBonding$p.value
# sample size? length(unique(tlc$englishName)*2)
groupBondingSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityGroupBonding <- psych::alpha(groupBondingMatrix)
cronAlphaGroupBonding <- reliabilityGroupBonding$total[,2]
guttLambdaGroupBonding <- reliabilityGroupBonding$total[,3]
@


Items concerning bonding to the training group (emotional support, shared goal, fusion pictorial) were subjected to EFA.  Correlations between items were high (all r's > \Sexpr{round(min(groupBondingMatrix), digits = 2)}), which suggested that one factor would be appropriate (see Table ee Table ~\ref{tab:groupBondingCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOgroupBondingMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettGroupBonding$df}, N = \Sexpr{groupBondingSampleSize}) = \Sexpr{bartlettGroupBonding$chisq}, p = \Sexpr{round(bartlettGroupBonding$p.value, digits = 2)}).
  One factor, labelled ``Group Social Bonding'' was imposed on the data, which explained \Sexpr{prVar.groupBondingFA}\% of the overall variance (SS Loading = \Sexpr{SSLoadings.groupBondingFA}). Guttmans \lambda = \Sexpr{round(reliabilityGroupBonding$total[,3], digits = 2)} and Cronbachs \alpha = \Sexpr{round(reliabilityGroupBonding$total[,2], digits = 2)} indicated that the data reduction was appropriate and reliable.

<<groupBondingCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcGroupBonding)
print(xtable(corstarsl(tlcGroupBonding), type="latex",
                    caption = "Correlations between group bonding variables",
                    label = "tab:groupBondingCorrTable"),
                    file = "groupBondingCorrTable.tex")
# label = tab:groupBondingCorrTable
@

print(xtable(corstarsl(tlcIndPerformance), type="latex",
                    caption = "Correlations between components of individual performance",
                    label = "tab:indComponentPerfCorrTable"),
                    file = "indComponengtPerfCorrTable.tex")



%team click
% "teamClickPictorial_1"  # TEAM CLICK post not measured
% [94] "reliabilityForOthers_1" # TEAM RELIABILITY - i don't ask about the team as a whole post-experiment...
% [95] "reliabilityOfOthers_1"
\subsubsection{Social Bonding to the team}


<<dataReductionTeamBonding, eval=TRUE, echo=FALSE>>=
#TeamBondingVariablesSubset: exclude effectivenessInContact (not relvant)
tlcTeamBonding <- subset(tlc, select = c(emotionalSupport, sharedGoal,
                                              fusionPictorialTeam, fusionVerbal, groupId))
tlcTeamBonding.pca <- princomp(na.omit(tlcTeamBonding))
summary(tlcTeamBonding.pca)
plot(tlcTeamBonding.pca)

tlcTeamBonding.fa <- factanal(~ emotionalSupport + sharedGoal +
                                      fusionPictorialTeam + fusionVerbal + groupId, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.teamBondingFA <- round(sum(tlcTeamBonding.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.teamBondingFA <-  round((colSums(tlcTeamBonding.fa$loadings*tlcTeamBonding.fa$loadings)/dim(tlcTeamBonding.fa$loadings)[1]*100), digits = 1)

head(tlcTeamBonding.fa$scores)
tlc <- cbind(tlc, tlcTeamBonding.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "teamBondingFactor"
teamBondingMatrix <- cor(tlcTeamBonding, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOteamBondingMatrix <- KMO(teamBondingMatrix)
# KMOTeamBondingMatrix$MSA is the colum in which the overal KMO is stored
bartlettTeamBonding <- cortest.bartlett(teamBondingMatrix, n = 116) # what is the sample size here?
# ls(BartlettTeamBonding)
# BartlettTeamBonding$chisq, BartlettTeamBonding$df, BartlettTeamBonding$p.value
# sample size? length(unique(tlc$englishName)*2)
teamBondingSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityTeamBonding <- psych::alpha(teamBondingMatrix)
cronAlphaTeamBonding <- reliabilityTeamBonding$total[,2]
guttLambdaTeamBonding <- reliabilityTeamBonding$total[,3]
@


Items concerning bonding to the team (emotional support, shared goal, fusion pictorial, fusion verbal, and group identification) were subjected to EFA.  Correlations between items were all reasonably high (all $r's > \Sexpr{round(min(teamBondingMatrix), digits = 2)}>$), which suggested that one factor would be appropriate (see Table ee Table ~\ref{tab:teamBondingCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOteamBondingMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettTeamBonding$df}, N = \Sexpr{teamBondingSampleSize}) = \Sexpr{bartlettTeamBonding$chisq}, p = \Sexpr{round(bartlettTeamBonding$p.value, digits = 2)}).
One factor, labelled ``Team Social Bonding'' was imposed on the data, which explained \Sexpr{prVar.teamBondingFA} \% of the overall variance (SS Loading = \Sexpr{SSLoadings.teamBondingFA}). Guttmans \lambda = \Sexpr{round(reliabilityTeamBonding$total[,3], digits = 2)} and Cronbachs \alpha = \Sexpr{round(reliabilityTeamBonding$total[,2], digits = 2)} indicated that the data reduction was appropriate and reliable.

<<teamBondingCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcTeamBonding)
print(xtable(corstarsl(tlcTeamBonding), type="latex",
                    caption = "Correlations between team bonding variables",
                    label = "tab:teamBondingCorrTable"),
                    file = "teamBondingCorrTable.tex")
# label = tab:teamBondingCorrTable
@



\myparagraph{Arousal}
<<dataReductionArousal, eval=TRUE, echo=FALSE>>=
#ArousalVariablesSubset: exclude effectivenessInContact (not relvant)
tlcArousal <- subset(tlc, select = c(aroused, relaxed, excited))
tlcArousal.pca <- princomp(na.omit(tlcArousal))
summary(tlcArousal.pca)
plot(tlcArousal.pca)

tlcArousal.fa <- factanal(~ aroused + relaxed + excited, 1, data = tlc, rotation =        "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.ArousalFA <- round(sum(tlcArousal.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.ArousalFA <-  round((colSums(tlcArousal.fa$loadings*tlcArousal.fa$loadings)/dim(tlcArousal.fa$loadings)[1]*100), digits = 1)

head(tlcArousal.fa$scores)
tlc <- cbind(tlc, tlcArousal.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "arousalFactor"
arousalMatrix <- cor(tlcArousal, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOarousalMatrix <- KMO(arousalMatrix)
# KMOarousalMatrix$MSA is the colum in which the overal KMO is stored
bartlettArousal <- cortest.bartlett(arousalMatrix, n = 116) # what is the sample size here?
# ls(BartlettArousal)
# BartlettArousal$chisq, BartlettArousal$df, BartlettArousal$p.value
# sample size? length(unique(tlc$englishName)*2)
arousalSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityArousal <- psych::alpha(arousalMatrix)
cronAlphaArousal <- reliabilityArousal$total[,2]
guttLambdaArousal <- reliabilityArousal$total[,3]
@


Items associated with team discipline (punctuality, observing bed times and curfews, attendance at meals, general team conduct), measured at baseline and after the experiment, were subjected to EFA.  Correlations between items were all reasonably high (all $r's > \Sexpr{round(min(arousalMatrix), digits = 2)}>$), which suggested that one factor would be appropriate (see Table ee Table ~\ref{tab:arousalCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOarousalMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettarousal$df}, N = \Sexpr{arousalSampleSize}) = \Sexpr{bartlettArousal$chisq}, p = \Sexpr{round(bartlettArousal$p.value, digits = 2)}).
One factor, labelled ``Team Discipline'' was imposed on the data, which explained \Sexpr{prVar.ArousalFA}\% of the overall variance (SS Loading = \Sexpr{SSLoadings.arousalFA}).  Guttmans \lambda = \Sexpr{round(reliabilityArousal$total[,3], digits = 2)}  and  Cronbachs \alpha = \Sexpr{round(reliabilityArousal$total[,2], digits = 2)}  indicated that the data reduction was appropriate and reliable.

<<arousalCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcArousal)
print(xtable(corstarsl(tlcArousal), type="latex",
                    caption = "Correlations between variables measuring arousal",
                    label = "tab:arousalCorrTable"),
                    file = "arousalCorrTable.tex")
)
# label = tab:arousalCorrTable
@




\subsubsection{Athlete Technical Competence (objective and subjective measures)}

<<dataReductionTechnicalCompetence, eval=TRUE, echo=FALSE>>=
#TechnicalCompetenceVariablesSubset:
tlcTechnicalCompetence <- subset(tlc, select = c(yearsTeam, trainingAge, teamStatus,
                                          athleteStatus, indAbilityTeammates_1, indAbilityChina_1, indAbilityInternational_1, teamAbilityChina_1))
tlcTechnicalCompetence.pca <- princomp(na.omit(tlcTechnicalCompetence))
summary(tlcTechnicalCompetence.pca)
plot(tlcTechnicalCompetence.pca)

tlcTechnicalCompetence.fa <- factanal(~ yearsTeam + trainingAge  + teamStatus +
                                          athleteStatus + indAbilityTeammates_1 + indAbilityChina_1 + indAbilityInternational_1, 2, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.objectiveCompetenceFA <- round(sum(tlcTechnicalCompetence.fa$loadings[,1]^2),
                                              digits = 2)

SSLoadings.subjectiveCompetenceFA <- round(sum(tlcTechnicalCompetence.fa$loadings[,2]^2),
                                              digits = 2)
#------------------Proportion of Variance----------------------#
prVar.technicalCompetenceFA <-  round((colSums(tlcTechnicalCompetence.fa$loadings*tlcTechnicalCompetence.fa$loadings)/dim(tlcTechnicalCompetence.fa$loadings)[1]*100), digits = 1)

unclass(prVar.technicalCompetenceFA)
prVar.technicalCompetenceFA <- data.frame(prVar.technicalCompetenceFA)
prVar.objectiveCompetenceFA <- prVar.technicalCompetenceFA[1,1]
prVar.subjectiveCompetenceFA <- prVar.technicalCompetenceFA[2,1]


head(tlcTechnicalCompetence.fa$scores)
tlc <- cbind(tlc, tlcTechnicalCompetence.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "objectiveCompetenceFactor"
names(tlc)[names(tlc) == "Factor2"] <- "subjectiveCompetenceFactor"
technicalCompetenceMatrix <- cor(tlcTechnicalCompetence, use = "complete")
objectiveCompetenceMatrix <- cor(subset(tlcTechnicalCompetence, select = c(yearsTeam, trainingAge, teamStatus, athleteStatus)))
subjectiveCompetenceMatrix <- cor(subset(tlcTechnicalCompetence, select = c(indAbilityTeammates_1, indAbilityChina_1, indAbilityInternational_1)))

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOtechnicalCompetenceMatrix <- KMO(technicalCompetenceMatrix)
# KMOTechnicalCompetenceMatrix$MSA is the colum in which the overal KMO is stored
bartlettTechnicalCompetence <- cortest.bartlett(technicalCompetenceMatrix, n = 116) # what is the sample size here?
# ls(BartlettTechnicalCompetence)
# BartlettTechnicalCompetence$chisq, BartlettTechnicalCompetence$df, BartlettTechnicalCompetence$p.value
# sample size? length(unique(tlc$englishName)*2)
technicalCompetenceSampleSize <- length(unique(tlc$englishName)) # values for each participant measured at one time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityTechnicalCompetence <- psych::alpha(technicalCompetenceMatrix)
cronAlphaTechnicalCompetence <- reliabilityTechnicalCompetence$total[,2]
guttLambdaTechnicalCompetence <- reliabilityTechnicalCompetence$total[,3]
@


All eight items relevant to technical competence were analysed in a correlation matrix to assess relatedness (see Table ~\ref{tab:technicalCompetenceCorrTable}). All measures of objective competence were highly correlated all r's >= \Sexpr{round(min(objectiveCompetenceMatrix), digits = 2)}),  and among measures of subjective competence (all items except for the team competence measure correlated at $> \Sexpr{round(min(subjectiveCompetenceMatrix), digits = 2)})$) suggested that the data could be explained by two underlying factors. Team Ability Chinese Provinces was dropped from analysis due to low correlation with other competence variables, possibly because the item did not ask about an individual athlete’s competence (it referred instead to an athlete’s opinion of the competence of the team of which they were a member).

An EFA of technical competence variables revealed that items of interest loaded on two factors. Measures of objective competence (Years Team, Training Age, Team Status, Athlete Status) loaded on the first factor, which was labelled ``Objective Competence'' because the measures were all objective markers of an athlete's competence.
Objective Competence explained \Sexpr{prVar.objectiveCompetenceFA}\% of the total variance (\Sexpr{SSLoadings.objectiveCompetenceFA}). The remaining measures of subjective competence (Ability Teammates, Ability Chinese Pros, Ability International Pros) loaded on the remaining factor.  The second factor was labelled ``Subjective Competence'', due to the fact that all measures were the product of athlete self-report.  Subjective competence explained \Sexpr{prVar.objectiveCompetenceFA}\% of the variance (\Sexpr{SSLoadings.subjectiveCompetenceFA}).
$Guttmans \lambda = \Sexpr{round(reliabilityTechnicalCompetence$total[,3], digits = 2)}$ and $Cronbachs \alpha = \Sexpr{round(reliabilityTechnicalCompetence$total[,2], digits = 2)}$ indicated that the data reduction was appropriate and reliable.


<<technicalCompetenceCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcTechnicalCompetence)
print(xtable(corstarsl(tlcTechnicalCompetence), type="latex",
                    caption = "Correlations between measures of technical competence",
                    label = "tab:technicalCompetenceCorrTable"),
                    file = "technicalCompetenceCorrTable.tex")
# label = tab:technicalCompetenceCorrTable
@







\subsubsection{Team Discipline}
<<dataReductionTeamDiscipline, eval=TRUE, echo=FALSE>>=
#TeamDisciplineVariablesSubset: exclude effectivenessInContact (not relvant)
tlcTeamDiscipline <- subset(tlc, select = c(teamAttendanceMeals, teamCurfew, teamGeneralConduct, teamPunctuality))
tlcTeamDiscipline.pca <- princomp(na.omit(tlcTeamDiscipline))
summary(tlcTeamDiscipline.pca)
plot(tlcTeamDiscipline.pca)

tlcTeamDiscipline.fa <- factanal(~ teamAttendanceMeals + teamCurfew + teamGeneralConduct +
                                      teamPunctuality, 1, data = tlc, rotation = "promax", na.action = na.exclude, scores = "regression")  #<- this formula format allows preserving of NAs for later rebind to df

#-----------------------------SS Loadings----------------------#
SSLoadings.teamDisciplineFA <- round(sum(tlcTeamDiscipline.fa$loadings[,1]^2), digits = 2)
#------------------Proportion of Variance----------------------#
prVar.teamDisciplineFA <-  round((colSums(tlcTeamDiscipline.fa$loadings*tlcTeamDiscipline.fa$loadings)/dim(tlcTeamDiscipline.fa$loadings)[1]*100), digits = 1)

head(tlcTeamDiscipline.fa$scores)
tlc <- cbind(tlc, tlcTeamDiscipline.fa$scores)
names(tlc)[names(tlc) == "Factor1"] <- "teamDisciplineFactor"
teamDisciplineMatrix <- cor(tlcTeamDiscipline, use = "complete")

#---------suitability measures (KMO & Bartlett)----------------#
library(psych)
KMOteamDisciplineMatrix <- KMO(teamDisciplineMatrix)
# KMOTeamDisciplineMatrix$MSA is the colum in which the overal KMO is stored
bartlettTeamDiscipline <- cortest.bartlett(teamDisciplineMatrix, n = 116) # what is the sample size here?
# ls(BartlettTeamDiscipline)
# BartlettTeamDiscipline$chisq, BartlettTeamDiscipline$df, BartlettTeamDiscipline$p.value
# sample size? length(unique(tlc$englishName)*2)
teamDisciplineSampleSize <- length(unique(tlc$englishName))*2 # values for each participant measured attwo time points

#----------reliability measures--------------------------------#
# Cronbach's Alpha and Guttman's Lambda using psych::alpha()
#Cronbach's Alpha is located reliabilityObject$total[,2]
#Guttman's Lambda is located reliabilityObject$total[,3]
reliabilityTeamDiscipline <- psych::alpha(teamDisciplineMatrix)
cronAlphaTeamDiscipline <- reliabilityTeamDiscipline$total[,2]
guttLambdaTeamDiscipline <- reliabilityTeamDiscipline$total[,3]
@


Items concerning team discipline (attendance at meals, team curfew, general team conduct, punctuality to team engagements), measured at baseline and after the experiment, were subjected to EFA.  Correlations between items were all reasonably high (all $r's > \Sexpr{round(min(teamDisciplineMatrix), digits = 2)}>$), which suggested that one factor would be appropriate (see Table ee Table ~\ref{tab:teamDisciplineCorrTable}). The KMO index and Bartlett's test both suggested high sampling adequacy, (KMO =  \Sexpr{round(KMOteamDisciplineMatrix$MSA, digits = 2)}, \chi^2(\Sexpr{bartlettTeamDiscipline$df}, N = \Sexpr{teamDisciplineSampleSize}) = \Sexpr{bartlettTeamDiscipline$chisq}, p = \Sexpr{round(bartlettTeamDiscipline$p.value, digits = 2)}).
One factor, labelled ``Team Discipline'' was imposed on the data, which explained \Sexpr{prVar.teamDisciplineFA} \% of the overall variance (SS Loading = \Sexpr{SSLoadings.teamDisciplineFA}).  Guttmans \lambda = \Sexpr{round(reliabilityTeamDiscipline$total[,3], digits = 2)}  and  Cronbachs \alpha = \Sexpr{round(reliabilityTeamDiscipline$total[,2], digits = 2)}  indicated that the data reduction was appropriate and reliable.

<<teamDisciplineCor, echo = TRUE>>=
# be sure to import the variable subset data frame, not the correlation matrix
corstarsl(tlcTeamDiscipline)
print(xtable(corstarsl(tlcTeamDiscipline), type="latex",
                    caption = "Correlations between variables measuring team discipline",
                    label = "tab:teamDisciplineCorrTable"),
                    file = "teamDisciplineCorrTable.tex")
# label = tab:teamDisciplineCorrTable
@



% \myparagraph{Fatigue} - fatigue is measured pre and post experiment, but mental and prpe are measured only post-experiment, so no need for EFA

<<factorsAttachWideFormat, echo = FALSE, eval = TRUE >>=
#attach factors to wide-format variable:
# jointActionSuccess:
twc$jointActionSuccessPost <- tlc$jointActionSuccess[tlc$time == 3]
twc$jointActionSuccessPre <- tlc$jointActionSuccess[tlc$time == 2]
# indPerformanceComponents:
twc$indPerformanceComponentsPost <- tlc$indPerformanceComponents[tlc$time == 3]
twc$indPerformanceComponentsPre <- tlc$indPerformanceComponents[tlc$time == 2]
# groupClick
twc$groupClickFactorPost <- tlc$groupClickFactor[tlc$time == 3]
twc$groupClickFactorPre <- tlc$groupClickFactor[tlc$time == 2]
# groupBonding
twc$groupBondingFactorPost <- tlc$groupBondingFactor[tlc$time == 3]
twc$groupBondingFactorPre <- tlc$groupBondingFactor[tlc$time == 2]
#arousalFactor
twc$arousalFactorPre <- tlc$arousalFactor[tlc$time == 2]
twc$arousalFactorPost <- tlc$arousalFactor[tlc$time == 3]
#objectiveCompetence:
twc$objectiveCompetenceFactor <- tlc$objectiveCompetenceFactor[tlc$time == 1]
#subjectiveCompetence:
twc$subjectiveCompetenceFactor <- tlc$subjectiveCompetenceFactor[tlc$time == 1]
#teamBondingFactor:
twc$teamBondingFactor <- tlc$teamBondingFactor[tlc$time == 1]
#teamDisciplineFactor:
twc$teamDisciplineFactor <- tlc$teamDisciplineFactor[tlc$time == 1]
@

















\subsection{Manipulation Checks}
Athletes were asked two questions in the post-manipulation pre-experiment survey gauge their confidence in individual and group ability to handle the technical challenges of the training drill. Due to the fact that athletes had been primed to expect either a difficult or simple training drill, athlete responses to these items were expected to vary according to condition.  It was expected that athletes in the high difficulty condition would be less confident about their own and their group's ability to meet the technical challenges of the training session. In addition, it was predicted that athlete arousal, measured in the survey immediately prior to each experiment session, would also vary according to condition, such that athletes in the high difficulty condition were more aroused than athtletes in the low difficulty condition.  Meaningful variation in these variables could be used as evidence that the experimental manipulation was successful.

<<manipulationChecks1, echo = FALSE, eval = TRUE>>=
#condition differences in:
# 1. groupConfidentTechnicalChallenges,
# 2. indConfidenceChallenges,
# 3. arousal
#subset df according to condition:
low <- subset(twc, condition == "low")
high <- subset(twc, condition == "high")

# group confidence in technical challenges:
groupConfCondition.BoxPlot <- boxplot(groupConfidentTechnicalChallenges_2 ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Confidence in group to \n meet technical challenges",
                                        xlab = "Condition",
                                        ylab = "Confidence",
                                        data = twc)
histHighGroupConfidence <- hist(high$groupConfidentTechnicalChallenges_2,
                                        main =  "Histogram of confidence in group to \n meet technical challenges (high difficulty)",
                                        xlab = "Confidence",
                                        xlim = c(0, 100))
histLowGroupConfidence <- hist(low$groupConfidentTechnicalChallenges_2,
                                        main =  "Histogram of confidence in group to \n meet technical challenges (low difficulty)",
                                        xlab = "Confidence",
                                        xlim = c(0, 100))

library(car)                                        leveneTest(groupConfidentTechnicalChallenges_2 ~ condition,
                                                      data = twc)
fligner.test(groupConfidentTechnicalChallenges_2 ~ condition,
                                                       data = twc)
bartlett.test(groupConfidentTechnicalChallenges_2 ~ condition,
                                                        data = twc)
library(stats)
var.test(high$groupConfidentTechnicalChallenges_2,
                              low$groupConfidentTechnicalChallenges_2)
                                        # variance does not appear to differ significantly


# CONFIDENCE IN INDIVIDUAL ABILITY
indConfCondition.BoxPlot <- boxplot(indConfidenceChallenges_2 ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Confidence in individual ability \n to meet technical challenges",
                                        xlab = "Condition",
                                        ylab = "Confidence",
                                        data = twc)

histHighIndConfidence <- hist(high$indConfidenceChallenges_2,
                                        main =  "Histogram of confidence in individual \n ability to meet technical challenges \n (high difficulty)",
                                        xlab = "Confidence",
                                        xlim = c(0, 100),
                                        ylim = c(0, 20))
histLowIndConfidence <- hist(low$indConfidenceChallenges_2, main =
                                        "Histogram of condifence in in individual \n ability to meet technical challenges \n (low difficulty)",
                                        xlab = "Confidence",
                                        xlim = c(0, 100),
                                        ylim = c(0, 20))
# t.test(high$indConfidenceChallenges_2, low$indConfidenceChallenges_2)

library(car)
leveneTest(indConfidenceChallenges_2 ~ condition, data = twc)
fligner.test(indConfidenceChallenges_2 ~ condition, data = twc)
bartlett.test(indConfidenceChallenges_2 ~ condition, data = twc)

library(stats) # variance appears to differ significantly
indPerfBartlett <- var.test(high$indConfidenceChallenges_2, low$indConfidenceChallenges_2)
# variance appears to differ significantly
install.packages("apa")
library(apa)
cohens_d(indPerfBartlett, format = ``latex'')
apa(indPerfBartlett)

# Arousal:
arousalFactorPre.BoxPlot <- boxplot(arousalFactorPre ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete arousal prior to experiment",
                                        xlab = "Condition",
                                        ylab = "Arousal",
                                        data = twc)
histArousalFactorPreHigh <- hist(high$arousalFactorPre,
                                        main =  "Histogram of athlete arousal \n prior to experiment (high difficulty)",
                                        xlab = "Arousal",
                                        xlim = c(-3, 2))
histArousalFactorPreLow <- hist(low$arousalFactorPre,
                                        main =  "Histogram of athlete arousal \n prior to experiment (low difficulty)",
                                        xlab = "Arousal",
                                        xlim = c(-3, 2))

t.test(high$arousalFactorPre, low$arousalFactorPre, na.rm = T) # n.s.
leveneTest(arousalFactorPre ~ condition, data = twc)
fligner.test(arousalFactorPre ~ condition, data = twc)
bartlett.test(arousalFactorPre ~ condition, data = twc) # all n.s.

#this is only measured at time = 2!
#standard deviation seems to be bigger in high difficulty condition:
#groupConfidenceHighSd <- sd(high$groupConfidentTechnicalChallenges_2, na.rm = TRUE)
#groupConfidenceLowSd <- sd(low$groupConfidentTechnicalChallenges_2, na.rm = TRUE)
#hist(high$groupConfidentTechnicalChallenges_2)
#hist(low$groupConfidentTechnicalChallenges_2)

# individual confidence in technical challenges:
#boxplot(indConfidenceChallenges_2 ~ condition, data = twc) #this is only measured at time = 2!
#standard deviation seems to be bigger in high difficulty condition:
#indConfidenceHighSd <- sd(high$indConfidenceChallenges_2, na.rm = TRUE)
#indConfidenceLowSd <- sd(low$indConfidenceChallenges_2, na.rm = TRUE)
#hist(high$indConfidenceChallenges_2)
#hist(low$indConfidenceChallenges_2)
#arousal

#boxplot(arousalFactorPre ~ condition, data = twc)
# high difficulty condition looks like higher arousal annd higher variance

@

<<manipulationCheckTable, echo = FALSE, eval = TRUE>>=

##subset data for table: groupConfidentTechnicalChallenges_2,indConfidenceChallenges_2, arousalFactorPre:
twcManipulationCheck <- subset(twc, select = c(age, sex, condition, team,
                                    groupConfidentTechnicalChallenges_2, indConfidenceChallenges_2, arousalFactorPre))
##rename columns for tables:
library(dplyr)
twcManipulationCheck <- rename(twcManipulationCheck, Condition = condition,
                                    ConfidenceInGroupAbility = groupConfidentTechnicalChallenges_2, ConfidenceIndividualAbility = indConfidenceChallenges_2, Arousal = arousalFactorPre)


## create a variable list which we want in table one
listVars <- c("ConfidenceInGroupAbility", "ConfidenceIndividualAbility", "Arousal")

## define categorical variables
catVars <- c("Condition")


## Create overall table:
table1 <- CreateTableOne(vars = listVars,
                         strata = "Condition",
                         data = twcManipulationCheck,
                         factorVars = catVars
                         )

## create table which is printable
table1_overall <- print(table1,
                            quote = FALSE,
                            noSpaces = FALSE,
                            printToggle = FALSE
                            )


## print to latex file in wd
## this latex file will later be inputted
print(xtable(table1_overall, type="latex",
      caption = "Pre-experiment manipulation check variables",
      label = "tab:manipulationCheckTable"),
      file="manipulationCheckTable.tex")
@


Neither group nor individual confidence in ability to meet technical challenges differed significantly by condition.  The variance of the confidence in individual and group confidence appeared to be higher in the high difficulty condition, however this variance was not significantly

tab:manipulationCheckTable








<<manipulationChecks2, echo = FALSE, eval = TRUE>>=
# what about secondary indicators that manipulation worked?
# in particular, team performance expectations and jointActionSuccess


#jointActionSuccess
boxplot(jointActionSuccessPre ~ condition, data = twc) # looks like no difference
boxplot(jointActionSuccessPost ~ condition, data = twc)


jointActionSuccessPre.BoxPlot <- boxplot(jointActionSuccessPre ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete perceptions of recent Joint \n Action Success with training group \n (pre-experiment)",
                                        xlab = "Condition",
                                        ylab = "Joint Action Success",
                                        data = twc)
histJointActionSuccessPrePreHigh <- hist(high$jointActionSuccessPre,
                                        main =  "Histogram of pre-experiment \n Joint Action Succcess \n (high difficulty)",
                                        xlab = "Joint Action Success",
                                        ylim = c(0, 20),
                                        xlim = c(-3, 2))
histjointActionSuccessPreLow <- hist(low$jointActionSuccessPre,
                                        main =  "Histogram of \n pre-experiment Joint Action Succcess \n (low difficulty)",
                                        xlab = "Joint Action Success",
                                        ylim = c(0, 20),
                                        xlim = c(-3, 2))


#groupPerformanceExpectationsPost:
groupPerformance_3.BoxPlot <- boxplot(groupPerformance_3 ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete perception of group performance relative to prior expectations",
                                        xlab = "Condition",
                                        ylab = "Group Performance",
                                        data = twc)

histGroupPerformanceExpHigh <- hist(high$groupPerformance_3,
                                        main =  "Histogram of athlete perception \n of group performance relative to \n prior expectations (high difficulty)",
                                        xlab = "Group Performance",
                                        ylim = c(0, 15),
                                        xlim = c(0, 100))

histGroupPerformanceExpLow <- hist(low$groupPerformance_3,
                                        main =  "Histogram of athlete perception \n of group performance relative to \n prior expectations \n (low difficulty)",
                                        xlab = "Group Performance",
                                        ylim = c(0, 15),
                                        xlim = c(0, 100))

#indvidualPerformanceExpectations:
indPerformance_3.BoxPlot <- boxplot(indPerformance_3 ~ condition,
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete perception of individual performance relative to prior expectations",
                                        xlab = "Condition",
                                        ylab = "Individual Performance",
                                        data = twc)
t.test(high$indPerformance_3, low$indPerformance_3)

histIndPerformanceExpHigh <- hist(high$indPerformance_3,
                                        main =  "Histogram of athlete perception \n of individual performance relative to \n prior expectations (high difficulty)",
                                        xlab = "Individual Performance",
                                        ylim = c(0, 15),
                                        xlim = c(0, 100))

histIndPerformanceExpLow <- hist(low$indPerformance_3,
                                        main =  "Histogram of athlete perception \n of individual performance relative to \n prior expectations \n (low difficulty)",
                                        xlab = "Individual Performance",
                                        ylim = c(0, 15),
                                        xlim = c(0, 100))


groupPerformanceFactor.BoxPlot <- boxplot(groupPerformanceFactor[condition == "low"] ~
                                        time[condition == "low"],
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete pre versus post \n perceptions of joint action success \n (low difficulty)",
                                        xlab = "Time",
                                        ylab = "Joint Action Success",
                                        data = tlc)
t.test(twc$jointActionSuccessPre[twc$condition == "high"], twc$jointActionSuccessPost[twc$condition == "high"], paired = T)

groupPerformanceFactor.BoxPlot <- boxplot(groupPerformanceFactor[condition == "high"] ~
                                        time[condition == "high"],
                                        varwidth = TRUE,
                                        width = c(.5,.5),
                                        notch = F,
                                        main = "Athlete pre versus post \n perceptions of joint action success \n (high difficulty)",
                                        xlab = "Time",
                                        ylab = "Joint Action Success",
                                        data = tlc)
t.test(twc$jointActionSuccessPre[twc$condition == "low"], twc$jointActionSuccessPost[twc$condition == "low"], paired = T)

summary(lm(tlc$jointActionSuccess ~ tlc$time:tlc$condition))

# performanceExpectations:
boxplot(groupPerformance_3 ~ condition, data = twc) # measured at t3 only
t.test(high$groupPerformance_3, low$groupPerformance_3, na.rm = T)
@


<<manipulationChecks3, echo = FALSE, eval = TRUE>>=
#check if there are any meaningful changes in pre-post performance:
t.test(high$)


@




























<<prePostChanges>>=
library(lme4)
library(optimx)

#bondingTime
summary(bondingTimeInt.lmer <- lmer(groupBondingFactor ~ time + ( 1 | englishName/team),
                                    data =  trainingLong, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE           ,                                      optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))


#condTimeInteraction
bondingCondTimeInt.lmer <- lmer(groupBondingFactor ~ time*condition + ( 1 | englishName/team),
                                data =  trainingLong, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                          optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE)))
summary(bondingCondTime.lmer)




summary(bondingPostCond.lmer <- lmer(groupBondingPost ~ condition + ( condition | team),
                                     data =  training, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                           optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))
@




<<predictionsTest>>=
# prediction 1a: joint-action success -> teamClick

plot(twc$groupPerformancePost, twc$groupClickPost)
abline(lm(twc$groupClickPost ~ twc$groupPerformancePost))
summary(lm(twc$groupClickPost ~ twc$groupPerformancePost))

library(lme4)
library(optimx)
summary(clickPostTeamPerformance.lmer <- lmer(groupClickPost ~ groupPerformancePost + condition + indPerformancePost + ( 1 | team),
                                              data =  twc, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                                    optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))


# prediction 1b: groupPerformanceExpectations -> teamClick:
twc$groupPerformance_3Norm <- scale(twc$groupPerformance_3)
twc$indPerformance_3Norm <- scale(twc$indPerformance_3)

plot(twc$groupPerformance_3Norm, twc$groupClickPost)
abline(lm(twc$groupClickPost ~ twc$groupPerformance_3Norm))
summary(lm(twc$groupClickPost ~ twc$groupPerformance_3Norm))
summary(clickPostTeamPerformanceExpectations.lmer <- lmer(groupClickPost ~ groupPerformance_3Norm + condition + indPerformance_3Norm +  ( groupPerformance_3Norm | team),
                                                          data =  twc, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                                                optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))

#prediction 1c: jointActionSuccess*groupPerformanceExpectations:


summary(clickPostTeamPerformanceExpInt.lmer <- lmer(groupClickPost ~ groupPerformancePost*groupPerformance_3Norm + condition + ( groupPerformancePost | team),
                                                    data =  twc, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                                          optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))


#prediction 2a: groupClick -> groupBonding
plot(twc$groupClickPost, twc$groupBondingPost)
abline(lm(twc$groupBondingPost ~ twc$groupClickPost))
summary(lm(twc$groupBondingPost ~ twc$groupClickPost))

summary(bondingPostClick.lmer <- lmer(groupBondingPost ~ groupClickPost + condition + (groupClickPost | team),
                                      data =  twc, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                            optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))

#prediction 3b:
plot(twc$groupClickPost, twc$groupBondingPost)
abline(lm(twc$groupBondingPost ~ twc$groupClickPost))
summary(lm(twc$groupBondingPost ~ twc$groupClickPost))


summary(bondingPostTeamPerformanceExpectations.lmer <- lmer(groupBondingPost ~ groupPerformance_3Norm + condition + ( groupPerformance_3 | team),
                                                            data =  twc, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                                                  optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))


#prediction 3a: jointActionSuccess -> socialBonding
@



<<exploreBonding>>=
# bonding by session? by team? (sd/bj?)

plot(training$sessionName, training$groupBondingPost)
plot(training$sessionName, training$groupClickPost)
plot(training$team, training$groupBondingPost)
plot(training$team, training$groupClickPost)
plot(training$condition, training$groupBondingPost)
plot(training$condition, training$groupClickPost)
training$sex <- as.factor(training$sex)
plot(training$sex, training$groupBondingPost, type = boxplot)
plot(training$sex, training$groupClickPost)

training$athleteStatus <- as.factor(training$athleteStatus)
plot(training$athleteStatus, training$groupBondingPost)
abline(lm(training$groupBondingPost ~ training$athleteStatus))
plot(training$athleteStatus, training$groupClickPost)

length(unique(training$englishName[training$athleteStatus == 0]))


plot(training$trainingAge, training$groupBondingPost)
abline(lm(training$groupBondingPost ~ training$trainingAge))


training$groupStayChange_3.reversed <- 100 - training$groupStayChange_3

plot(training$groupClickPost, training$groupStayChange_3.reversed)
abline(lm(training$groupStayChange_3.reversed ~ training$groupClickPost))
summary(lm(training$groupStayChange_3.reversed ~ training$groupClickPost))


summary(bondingPostTeamPerformanceExpectations.lmer <- lmer(groupBondingPost ~ groupPerformance_3 + condition + ( groupPerformance_3 | team),
                                                            data =  training, REML = FALSE, control = lmerControl(optimizer = "optimx", calc.derivs = FALSE,
                                                                                                                  optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE))))


#-----------------------EXPLORE RELATIONSHIPS----------------------------------------------------#

plot(twc$groupPerformancePost, twc$groupClickPost)
abline(lm(twc$groupClickPost ~ twc$groupPerformancePost))

#successTotals
plot(twc$successTotals, twc$groupPerformancePost)
abline(lm(twc$groupPerformancePost ~ twc$successTotals))
summary(lm(twc$groupPerformancePost ~ twc$successTotals))


#outcomeAvg:
plot(twc$outcomeAvg, twc$groupPerformancePost)
abline(lm(twc$groupPerformancePost ~ twc$outcomeAvg))
summary(lm(twc$groupPerformancePost ~ twc$outcomeAvg))


#fullOutcomeAvg
plot(twc$fullOutcomeAvg, twc$groupPerformancePost)
abline(lm(twc$groupPerformancePost ~ twc$fullOutcomeAvg))

#fullOutcomeSd  <- this is significant*
plot(twc$fullOutcomeSd, twc$groupPerformancePost)
abline(lm(twc$groupPerformancePost ~ twc$fullOutcomeSd))
summary(lm(twc$groupPerformancePost ~ twc$fullOutcomeSd))

plot(twc$fullOutcomeAvg, twc$groupPerformancePost)
abline(lm(twc$groupPerformancePost ~ twc$fullOutcomeAvg))
summary(lm(twc$groupPerformancePost ~ twc$fullOutcomeAvg))


#prePost changes groupClick:
plot(tlc$time, tlc$groupClickFactor)
boxplot(groupBondingFactor ~ time, tlc)
summary(lm(tlc$groupBondingFactor ~ tlc$time))


#prePost changes grouBonding:
plot(tlc$time, tlc$groupBondingFactor)
boxplot(groupBondingFactor ~ time, tlc)
summary(lm(tlc$groupBondingFactor ~ tlc$time))


boxplot(groupClickPost ~ athleteStatus, twc)
plot(tlc$athleteStatus, tlc$groupClickFactor)
@











\section{Discussion}

1.Summary of the research:

2.Theoretical implications:
Do the results provide support for any existing theories? If not, how can they be explained? Although you do not have to provide a definitive explanation or detailed theory for your results, you at least need to outline one or more possible explanations.

3.Practical implications:
In applied research—and often in basic research—there is also some discussion of the practical implications of the research. How can the results be used, and by whom, to accomplish some real-world goal?

4.Limitations:
The theoretical and practical implications are often followed by a discussion of the study’s limitations. Perhaps there are problems with its internal or external validity. Perhaps the manipulation was not very effective or the measures not very reliable. Perhaps there is some evidence that participants did not fully understand their task or that they were suspicious of the intent of the researchers. Now is the time to discuss these issues and how they might have affected the results.

5.Suggestions for future research:
If the study did not satisfactorily answer the original research question, what will it take to do so? What new research questions has the study raised? This part of the discussion, however, is not just a list of new questions. It is a discussion of two or three of the most important unresolved issues. This means identifying and clarifying each question, suggesting some alternative answers, and even suggesting ways they could be studied.

\section{Appendices}
Appendixes, Tables, and Figures
Appendixes, tables, and figures come after the references. An appendix is appropriate for supplemental material that would interrupt the flow of the research report if it were presented within any of the major sections. An appendix could be used to present lists of stimulus words, questionnaire items, detailed descriptions of special equipment or unusual statistical analyses, or references to the studies that are included in a meta-analysis. Each appendix begins on a new page.



\end{document}
